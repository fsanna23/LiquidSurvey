[{"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\index.js":"1","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\App.js":"2","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\tmpSurveys.js":"3","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\editorStyles.js":"4","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\SelectedSurveyContext.js":"5","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\pages.js":"6","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NavBar.js":"7","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MainPage.js":"8","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewSurvey.js":"9","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\View.js":"10","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\JsonLoader.js":"11","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\viewStyles.js":"12","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\ImageInputBtn.js":"13","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewQuestion.js":"14","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewImage.js":"15","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewTextField.js":"16","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewRandomNumber.js":"17","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\PlaceholdersContext.js":"18","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\contentTypes.js":"19","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\surveys\\Survey.js":"20","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\RandomGallery.js":"21","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\LinearScaleQuestion.js":"22","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\questionTypes.js":"23","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MultipleChoiceQuestion.js":"24","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Page.js":"25","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RandomNamesContext.js":"26","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Image.js":"27","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\LinearScaleQuestion.js":"28","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RankingQuestion.js":"29","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\MultipleChoiceQuestion.js":"30","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\TextQuestion.js":"31","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\TextField.js":"32","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\DataCollectorContext.js":"33"},{"size":230,"mtime":1614846956021,"results":"34","hashOfConfig":"35"},{"size":4941,"mtime":1614872742432,"results":"36","hashOfConfig":"35"},{"size":4677,"mtime":1614846956024,"results":"37","hashOfConfig":"35"},{"size":9530,"mtime":1615049326040,"results":"38","hashOfConfig":"35"},{"size":129,"mtime":1614846956003,"results":"39","hashOfConfig":"35"},{"size":119,"mtime":1614846956013,"results":"40","hashOfConfig":"35"},{"size":905,"mtime":1614846956008,"results":"41","hashOfConfig":"35"},{"size":3814,"mtime":1614985291573,"results":"42","hashOfConfig":"35"},{"size":26083,"mtime":1615049325945,"results":"43","hashOfConfig":"35"},{"size":438,"mtime":1614185297931,"results":"44","hashOfConfig":"35"},{"size":7731,"mtime":1615068235164,"results":"45","hashOfConfig":"35"},{"size":2455,"mtime":1615052518132,"results":"46","hashOfConfig":"35"},{"size":1564,"mtime":1614846956004,"results":"47","hashOfConfig":"35"},{"size":12526,"mtime":1615031002480,"results":"48","hashOfConfig":"35"},{"size":7670,"mtime":1614846956008,"results":"49","hashOfConfig":"35"},{"size":5846,"mtime":1615049325956,"results":"50","hashOfConfig":"35"},{"size":3842,"mtime":1614846956011,"results":"51","hashOfConfig":"35"},{"size":125,"mtime":1614846956013,"results":"52","hashOfConfig":"35"},{"size":175,"mtime":1614846956016,"results":"53","hashOfConfig":"35"},{"size":8883,"mtime":1614846956023,"results":"54","hashOfConfig":"35"},{"size":4974,"mtime":1615049325996,"results":"55","hashOfConfig":"35"},{"size":2872,"mtime":1615031002451,"results":"56","hashOfConfig":"35"},{"size":238,"mtime":1614846956014,"results":"57","hashOfConfig":"35"},{"size":1810,"mtime":1614846956007,"results":"58","hashOfConfig":"35"},{"size":1682,"mtime":1615071082610,"results":"59","hashOfConfig":"35"},{"size":123,"mtime":1614989861933,"results":"60","hashOfConfig":"35"},{"size":2124,"mtime":1615068351734,"results":"61","hashOfConfig":"35"},{"size":4564,"mtime":1615073682634,"results":"62","hashOfConfig":"35"},{"size":4372,"mtime":1615076039850,"results":"63","hashOfConfig":"35"},{"size":3416,"mtime":1615074726000,"results":"64","hashOfConfig":"35"},{"size":2458,"mtime":1615074697434,"results":"65","hashOfConfig":"35"},{"size":1948,"mtime":1615050654214,"results":"66","hashOfConfig":"35"},{"size":127,"mtime":1615052995071,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ofat9x",{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\index.js",[],["145","146"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\App.js",["147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./components/editor/NavBar\";\r\nimport MainPage from \"./components/editor/MainPage\";\r\nimport NewSurvey from \"./components/editor/NewSurvey\";\r\nimport View from \"./components/view/View\";\r\nimport pages from \"./components/pages\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { appStyle } from \"./editorStyles\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport { mySimpleSurvey, mySurvey } from \"./tmpSurveys\";\r\nimport SelectedSurveyContext from \"./SelectedSurveyContext\";\r\n\r\nconst useStyles = appStyle;\r\n\r\n// Initial surveys\r\nconst surveyz = [mySurvey, mySimpleSurvey];\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [page, setPage] = useState(pages.MAIN);\r\n  const [showDrawer, setShowDrawer] = useState(false);\r\n  const [selectedSurvey, setSelectedSurvey] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getSurveysFromServer();\r\n  }, []);\r\n\r\n  const switchDrawer = (value) => {\r\n    setShowDrawer(value);\r\n  };\r\n\r\n  const getSurveysFromServer = () => {\r\n    fetch(\"http://localhost:9000/getSurveys\")\r\n      .then((response) => response.json())\r\n      .then((data) => setSurveys(data));\r\n  };\r\n\r\n  const addSurvey = (newSurvey) => {\r\n    if (newSurvey.id) {\r\n      // I'm editing an already existing survey\r\n      fetch(\"http://localhost:9000/editSurvey\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newSurvey),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.status === \"saved\") {\r\n            getSurveysFromServer();\r\n          } else console.error(\"FAILED TO INSERT THE SURVEY\");\r\n        });\r\n    } else {\r\n      fetch(\"http://localhost:9000/insertSurvey\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newSurvey),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.status === \"saved\") {\r\n            getSurveysFromServer();\r\n          } else console.error(\"FAILED TO INSERT THE SURVEY\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteSurvey = (survey) => {\r\n    fetch(\"http://localhost:9000/deleteSurvey\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(survey),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === \"saved\") {\r\n          fetch(\"http://localhost:9000/getSurveys\")\r\n            .then((response) => response.json())\r\n            .then((data) => setSurveys(data));\r\n        } else console.error(\"FAILED TO DELETE THE SURVEY\");\r\n      });\r\n  };\r\n\r\n  const checkPage = () => {\r\n    switch (page) {\r\n      case pages.MAIN:\r\n        return (\r\n          <MainPage\r\n            surveys={surveys}\r\n            setPage={setPage}\r\n            selectSurvey={setSelectedSurvey}\r\n            deleteSurvey={deleteSurvey}\r\n          />\r\n        );\r\n      case pages.NEWSURVEY:\r\n        return (\r\n          <NewSurvey\r\n            json={selectedSurvey}\r\n            setPage={setPage}\r\n            addSurvey={addSurvey}\r\n          />\r\n        );\r\n      case pages.VIEWSURVEY:\r\n        return (\r\n          <SelectedSurveyContext.Provider value={selectedSurvey}>\r\n            <View />\r\n          </SelectedSurveyContext.Provider>\r\n        );\r\n    }\r\n  };\r\n\r\n  const renderDrawer = () => {\r\n    const renderIcon = (index) => {\r\n      switch (index) {\r\n        case 0:\r\n          return <DescriptionIcon />;\r\n        case 1:\r\n          return <TrendingUpIcon />;\r\n      }\r\n    };\r\n    const onItemClick = (index) => {\r\n      switch (index) {\r\n        case 0:\r\n          setPage(pages.MAIN);\r\n          setShowDrawer(false);\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classes.drawer}>\r\n        <List>\r\n          {[\"Surveys\", \"Statistics\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => {\r\n                onItemClick(index);\r\n              }}\r\n            >\r\n              <ListItemIcon>{renderIcon(index)}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar setDrawer={switchDrawer} />\r\n      {checkPage()}\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={showDrawer}\r\n        onClose={() => {\r\n          switchDrawer(false);\r\n        }}\r\n      >\r\n        {renderDrawer()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\tmpSurveys.js",["150","151"],"import {\r\n  ShortAnswer,\r\n  Paragraph,\r\n  MultipleChoice,\r\n  CheckBox,\r\n  Survey,\r\n  SurveyPage,\r\n} from \"./surveys/Survey\";\r\n\r\nlet firstQuestion = new ShortAnswer(\"My Title\", true);\r\nlet secondQuestion = new Paragraph(\"My Paragraph Title\", true);\r\nlet thirdQuestion = new MultipleChoice(\"My MultipleChoice Title\", true, [\r\n  \"firstMCChoice\",\r\n  \"secondMCChoice\",\r\n  \"thirdMCCChoice\",\r\n]);\r\nlet fourthQuestion = new CheckBox(\"My Checkbox Title\", true, [\r\n  \"firstCBChoice\",\r\n  \"secondCBChoice\",\r\n  \"thirdCBChoice\",\r\n  \"fourthCBChoice\",\r\n]);\r\n\r\nlet firstPage = new SurveyPage([\r\n  firstQuestion,\r\n  secondQuestion,\r\n  thirdQuestion,\r\n  fourthQuestion,\r\n]);\r\nlet secondPage = new SurveyPage([firstQuestion]);\r\n\r\nlet otherSurvey = new Survey(\"Prova1\", \"Desc1\", [firstPage]);\r\nlet mySurvey = {\r\n  title: \"Random01\",\r\n  description: \"RandomDesc\",\r\n  pages: [\r\n    {\r\n        \"pageId\" : \"1\",\r\n        \"contents\": [\r\n          {\r\n            \"type\": \"Question\",\r\n            \"data\": {\r\n              \"type\": \"Multiple Choice\",\r\n              \"title\": \"The AI must decide: Is 40% or more of the nutrients on then plate fat?\",\r\n              \"description\": \"What will the AI decide?\",\r\n              \"choices\": [\r\n                {\r\n                  \"id\" : \"1\",\r\n                  \"value\": \"No, 30% of the nutrients on this plate is not fat.\"\r\n                },\r\n                {\r\n                  \"id\" : \"2\",\r\n                  \"value\": \"Yes, 30% of the nutrients on this plate is not fat.\"\r\n                }\r\n              ],\r\n              \"images\": [\"image01.png\", \"image02.png\"]\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"Question\",\r\n            \"data\": {\r\n              \"type\": \"Short Text\",\r\n              \"title\": \"The AI generated its prediction giving this motivation: it is represented as two curved lines\",\r\n              \"description\": \"What is your decision?\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"Question\",\r\n            \"data\": {\r\n              \"type\": \"Ranking\",\r\n              \"title\": \"Employee Performance review\",\r\n              \"description\": \"Rank these elements sorting them by importance to you\",\r\n              \"choices\": [\r\n                {\r\n                  \"id\": \"1\",\r\n                  \"value\": \"Job Knowledge\"\r\n                },\r\n                {\r\n                  \"id\": \"2\",\r\n                  \"value\": \"Work Quality\"\r\n                },\r\n                {\r\n                  \"id\": \"3\",\r\n                  \"value\": \"Attendance/punctuality\"\r\n                },\r\n                {\r\n                  \"id\": \"4\",\r\n                  \"value\": \"Productivity\"\r\n                },\r\n                {\r\n                  \"id\": \"5\",\r\n                  \"value\": \"Communication Skills\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        pageId: 2,\r\n        contents: [\r\n          {\r\n            contentId: 1,\r\n            type: \"Image\",\r\n            data: {\r\n              title: \"ImagetitleProva\",\r\n              randomName: \"Pippo\",\r\n              randomStatus: true,\r\n            },\r\n          },\r\n          {\r\n            contentId: 2,\r\n            type: \"Random Number\",\r\n            data: { name: \"Pippo\", minRange: 0, maxRange: 100 },\r\n          },\r\n          {\r\n            contentId: 3,\r\n            type: \"Random Number\",\r\n            data: { name: \"Gatto\", minRange: 0, maxRange: 100 },\r\n          },        \r\n        ],\r\n      },\r\n    {\r\n      pageId: 3,\r\n      contents: [\r\n        \r\n        {\r\n          contentId: 1,\r\n          type: \"Image\",\r\n          data: {\r\n            title: \"ImagetitleProva\",\r\n            randomName: \"Cane\",\r\n            randomStatus: true,\r\n          },\r\n        },\r\n        {\r\n          contentId: 2,\r\n          type: \"Random Number\",\r\n          data: { name: \"Cane\", minRange: 0, maxRange: 100 },\r\n        }, \r\n        {\r\n          contentId: 3,\r\n          type: \"Image\",\r\n          data: {\r\n            title: \"ImagetitleProva\",\r\n            randomName: \"Gatto\",\r\n            randomStatus: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nlet mySimpleSurvey = {\r\n  title: \"Random01\",\r\n  description: \"RandomDesc\",\r\n  pages: [\r\n    {\r\n      pageId: 1,\r\n      contents: [\r\n        {\r\n          contentId: 1,\r\n          type: \"Random Number\",\r\n          data: { name: \"Pippo\", minRange: 0, maxRange: 100 },\r\n        },\r\n        {\r\n          contentId: 2,\r\n          type: \"Image\",\r\n          data: {\r\n            title: \"ImagetitleProva\",\r\n            randomName: \"Pippo\",\r\n            randomStatus: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport { mySimpleSurvey, mySurvey };\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\editorStyles.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\SelectedSurveyContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\pages.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NavBar.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MainPage.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewSurvey.js",["152","153","154","155","156","157","158","159","160"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\View.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\JsonLoader.js",["161","162","163","164"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\viewStyles.js",["165","166"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\ImageInputBtn.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewQuestion.js",["167","168","169","170"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewImage.js",["171","172","173","174","175","176","177","178","179","180","181","182"],"import React, { useState, useRef, Fragment, useEffect } from \"react\";\r\n// Material\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  Divider,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch,\r\n  Button,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n// Draggable\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n// Icons\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\n// Style\r\nimport { newImageStyle } from \"../../editorStyles\";\r\nimport QuestionTypes from \"../questionTypes\";\r\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport LinearScaleIcon from \"@material-ui/icons/LinearScale\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport RandomGallery from \"./RandomGallery\";\r\nimport content_type from \"../../contentTypes\";\r\nconst useStyles = newImageStyle;\r\n\r\nfunction NewImage(props) {\r\n  const classes = useStyles();\r\n  const fileInput = useRef(null);\r\n  const randomNumbersNames = props.randomNumbers;\r\n\r\n  const [title, setTitle] = useState(\r\n    props.data && props.data.title ? props.data.title : \"\"\r\n  );\r\n  const [img, setImg] = useState(\r\n    props.data && props.data.img ? props.data.img : undefined\r\n  );\r\n  const [randomize, setRandomize] = useState({\r\n    randomStatus:\r\n      props.data && props.data.randomStatus ? props.data.randomStatus : false,\r\n    randomName:\r\n      props.data && props.data.randomName ? props.data.randomName : \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"The random numbers in NewImage are: \", randomNumbersNames);\r\n  }, []);\r\n\r\n  const onRemoveContent = () => {\r\n    props.removeImage(props.index);\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n    props.update({ title: e.target.value });\r\n  };\r\n\r\n  const onClickSelectImg = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const onChangeImage = (e) => {\r\n    const myImg = e.target.files[0];\r\n    setImg(myImg);\r\n    props.update({ img: myImg });\r\n  };\r\n\r\n  const onChangeRandomStatus = () => {\r\n    setRandomize({ ...randomize, randomStatus: !randomize.randomStatus });\r\n    props.update({ randomStatus: !randomize.randomStatus });\r\n  };\r\n\r\n  const onChangeRandomName = (e) => {\r\n    setRandomize({ ...randomize, randomName: e.target.value });\r\n    props.update({ randomName: e.target.value });\r\n  };\r\n\r\n  /* const checkImageType = () => {\r\n    if (props.url) {\r\n      return props.url;\r\n    } else if (props.image) {\r\n      return URL.createObjectURL(props.image);\r\n    } else {\r\n      console.log(props);\r\n      return props.url;\r\n    }\r\n  };*/\r\n\r\n  const renderRandomizeSelection = () => {\r\n    const checkValue = () => {\r\n      let check = false;\r\n      if (randomNumbersNames.length !== 0) {\r\n        randomNumbersNames.forEach((name) => {\r\n          if (randomize.randomName === name) check = true;\r\n        });\r\n      }\r\n      return check;\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        {randomNumbersNames.length !== 0 ? (\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={checkValue() === true ? randomize.randomName : \"\"}\r\n            className={classes.randomNameSelector}\r\n            onChange={onChangeRandomName}\r\n            defaultValue=\"\"\r\n          >\r\n            {randomNumbersNames.map((rn) => (\r\n              <MenuItem key={\"selectvalue\" + rn} value={rn}>\r\n                {rn}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        ) : null}\r\n        <RandomGallery randomType={content_type.IMAGE} />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderDefaultImage = () => {\r\n    return (\r\n      <Fragment>\r\n        {img !== undefined ? (\r\n          <img\r\n            //src={checkImageType()}\r\n            src={URL.createObjectURL(img)}\r\n            alt={\"img\" + props.id}\r\n            className={classes.imgContent}\r\n          />\r\n        ) : (\r\n          <Fragment />\r\n        )}\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.selectAndChangeImgBtn}\r\n            onClick={() => {\r\n              onClickSelectImg();\r\n            }}\r\n          >\r\n            {img === undefined ? \"Select\" : \"Change\"} image\r\n          </Button>\r\n          <input\r\n            style={{\r\n              display: \"none\",\r\n              top: \"0px\",\r\n              right: \"0px\",\r\n            }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            ref={fileInput}\r\n            onChange={onChangeImage}\r\n            onClick={(event) => {\r\n              // Used to let the user select the same file if needed\r\n              event.target.value = null;\r\n            }}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder={props.url ? \"Video title\" : \"Image title\"}\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.imageTitle}\r\n            value={title}\r\n            onChange={onChangeTitle}\r\n          />\r\n          {randomize.randomStatus\r\n            ? renderRandomizeSelection()\r\n            : renderDefaultImage()}\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            {props.randomNumbers.length !== 0 ? (\r\n              <Fragment>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={randomize.randomStatus}\r\n                      onChange={onChangeRandomStatus}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Randomize\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  flexItem\r\n                  className={classes.cardActionsDivider}\r\n                />\r\n              </Fragment>\r\n            ) : null}\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveContent();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewImage;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewTextField.js",["183","184","185","186","187","188","189"],"import React, { Fragment, useState } from \"react\";\r\n// Material\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  Divider,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n// Draggable\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n// Icons\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// Style\r\nimport { newTextFieldStyle } from \"../../editorStyles\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\r\nimport ImageInputBtn from \"./ImageInputBtn\";\r\nconst useStyles = newTextFieldStyle;\r\n\r\nfunction NewTextField(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const onRemoveContent = () => {\r\n    props.removeTextField(props.index);\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    setState({ ...state, title: e.target.value });\r\n    props.update({ title: e.target.value });\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setState({ ...state, description: e.target.value });\r\n    props.update({ description: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder=\"Title\"\r\n            inputProps={{ \"aria-label\": \"title\" }}\r\n            className={classes.textTitle}\r\n            value={state.title}\r\n            onChange={onChangeTitle}\r\n          />\r\n          <Input\r\n            placeholder=\"Description\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.textDescription}\r\n            value={state.description}\r\n            onChange={onChangeDescription}\r\n          />\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveContent();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewTextField;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewRandomNumber.js",["190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Input,\r\n  Divider,\r\n  CardActions,\r\n  Tooltip,\r\n  IconButton,\r\n  InputLabel,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { newRandomNumberStyle } from \"../../editorStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nconst useStyles = newRandomNumberStyle;\r\n\r\nfunction NewRandomNumber(props) {\r\n  const [name, setName] = useState(\r\n    props.data && props.data.name ? props.data.name : \"\"\r\n  );\r\n  const [minRange, setMinRange] = useState(\r\n    props.data && props.data.minRange ? props.data.minRange : 0\r\n  );\r\n  const [maxRange, setMaxRange] = useState(\r\n    props.data && props.data.maxRange ? props.data.maxRange : 100\r\n  );\r\n\r\n  useEffect(() => {\r\n    props.update({ name, minRange, maxRange });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n    props.update({ name: e.target.value });\r\n  };\r\n\r\n  const onChangeMinRange = (e) => {\r\n    setMinRange(e.target.value);\r\n    props.update({ minRange: e.target.value });\r\n  };\r\n\r\n  const onChangeMaxRange = (e) => {\r\n    setMaxRange(e.target.value);\r\n    props.update({ maxRange: e.target.value });\r\n  };\r\n\r\n  const onRemoveContent = () => {\r\n    props.removeRandomNumber(props.index);\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder=\"Name for your random number\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.placeholderTitle}\r\n            value={name}\r\n            onChange={onChangeName}\r\n          />\r\n          <Typography variant=\"body1\" className={classes.rangeText}>\r\n            Insert the values for the random generation range\r\n          </Typography>\r\n          <FormControl className={classes.rangeInput}>\r\n            <InputLabel>Minimum range value</InputLabel>\r\n            <Input type=\"number\" value={minRange} onChange={onChangeMinRange} />\r\n          </FormControl>\r\n          <FormControl className={classes.rangeInput}>\r\n            <InputLabel>Maximum range value</InputLabel>\r\n            <Input type=\"number\" value={maxRange} onChange={onChangeMaxRange} />\r\n          </FormControl>\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveContent();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewRandomNumber;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\PlaceholdersContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\contentTypes.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\surveys\\Survey.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\RandomGallery.js",["192","193"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport content_type from \"../../contentTypes\";\r\nimport { randomGalleryStyle } from \"../../editorStyles\";\r\nconst useStyles = randomGalleryStyle;\r\n\r\nfunction RandomGallery(props) {\r\n  const [content, setContent] = useState(undefined);\r\n  const [contentIndex, setContentIndex] = useState(0);\r\n  const [contentList, setContentList] = useState([]);\r\n  const randomType = props.randomType;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (content === undefined) {\r\n      getFirstContent();\r\n    }\r\n  }, []);\r\n\r\n  const getFirstContent = () => {\r\n    // TODO generalize for any type of content\r\n    let imageList;\r\n    fetch(\"http://localhost:9000/getImageList\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setContentList(data);\r\n        imageList = data;\r\n      })\r\n      .then(() => {\r\n        let url = new URL(\"http://localhost:9000/getImage\");\r\n        url.search = new URLSearchParams({\r\n          imageName: imageList[\"Question Images\"][0],\r\n          folder: \"question\",\r\n        });\r\n        fetch(url)\r\n          .then((response) => response.blob())\r\n          .then((data) => setContent(data));\r\n      });\r\n  };\r\n\r\n  const getPreviousContent = () => {\r\n    let newIndex;\r\n    if (contentIndex !== 0) {\r\n      console.log(\"Content index is not zero\");\r\n      newIndex = contentIndex - 1;\r\n      setContentIndex(contentIndex - 1);\r\n    } else {\r\n      console.log(\"Content index is zero\");\r\n      newIndex = contentList[\"Question Images\"].length - 1;\r\n      setContentIndex(contentList[\"Question Images\"].length - 1);\r\n    }\r\n    console.log(\"The new index is\", newIndex);\r\n    console.log(\"The list is: \", contentList);\r\n    console.log(\r\n      \"The value at the list is :\",\r\n      contentList[\"Question Images\"][newIndex]\r\n    );\r\n    let url = new URL(\"http://localhost:9000/getImage\");\r\n    url.search = new URLSearchParams({\r\n      imageName: contentList[\"Question Images\"][newIndex],\r\n      folder: \"question\",\r\n    });\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((data) => setContent(data));\r\n  };\r\n\r\n  const getNextContent = () => {\r\n    let newIndex;\r\n    if (contentIndex !== contentList[\"Question Images\"].length - 1) {\r\n      newIndex = contentIndex + 1;\r\n      setContentIndex(contentIndex + 1);\r\n    } else {\r\n      newIndex = 0;\r\n      setContentIndex(0);\r\n    }\r\n    let url = new URL(\"http://localhost:9000/getImage\");\r\n    url.search = new URLSearchParams({\r\n      imageName: contentList[\"Question Images\"][newIndex],\r\n      folder: \"question\",\r\n    });\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((data) => setContent(data));\r\n  };\r\n\r\n  const renderRandomComponent = () => {\r\n    switch (randomType) {\r\n      case content_type.IMAGE: {\r\n        return content !== undefined ? (\r\n          <img\r\n            src={URL.createObjectURL(content)}\r\n            alt=\"Random image\"\r\n            className={classes.imgContent}\r\n          />\r\n        ) : (\r\n          <Fragment />\r\n        );\r\n      }\r\n      default: {\r\n        return <Fragment />;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"body1\">Overview of your random component</Typography>\r\n      {renderRandomComponent()}\r\n      <Button onClick={getPreviousContent}>Previous Content</Button>\r\n      <Button onClick={getNextContent}>Next Content</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomGallery;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\LinearScaleQuestion.js",["194"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\questionTypes.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MultipleChoiceQuestion.js",["195"],"import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { multipleChoiceQuestionStyle } from \"../../editorStyles\";\r\nconst useStyles = multipleChoiceQuestionStyle;\r\n\r\nfunction MultipleChoiceQuestion(props) {\r\n  const classes = useStyles();\r\n  let choices = [...props.choices];\r\n\r\n  const onChangeValue = (e, index) => {\r\n    choices[index].value = e.target.value;\r\n    props.update(choices);\r\n  };\r\n\r\n  const onRemoveOption = (index) => {\r\n    choices = choices.filter((el, ix) => ix !== index);\r\n    props.update(choices);\r\n  };\r\n\r\n  const onAddOption = () => {\r\n    choices = [...choices, { id: choices.length + 1, value: \"\" }];\r\n    props.update(choices);\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    return props.choices.map((choice, index) => {\r\n      return (\r\n        <div key={\"choice-\" + choice.id}>\r\n          <TextField\r\n            label={\"Option \" + (index + 1)}\r\n            value={choice.value}\r\n            className={classes.textField}\r\n            onChange={(e) => {\r\n              onChangeValue(e, index);\r\n            }}\r\n          />\r\n          {index !== 0 && index !== 1 ? (\r\n            <Button\r\n              color=\"#FF0000\"\r\n              className={classes.removeOptionBtn}\r\n              onClick={() => {\r\n                onRemoveOption(index);\r\n              }}\r\n            >\r\n              Remove option\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.fieldContainer}>\r\n      {renderOptions()}\r\n      <Button\r\n        color=\"primary\"\r\n        className={classes.addOptionBtn}\r\n        onClick={() => {\r\n          onAddOption();\r\n        }}\r\n      >\r\n        Add option\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultipleChoiceQuestion;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Page.js",["196","197","198","199","200","201"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\nimport TextQuestion from \"./TextQuestion.js\";\r\nimport MultipleChoiceQuestion from \"./MultipleChoiceQuestion.js\";\r\nimport RankingQuestion from \"./RankingQuestion.js\";\r\nimport LinearScaleQuestion from \"./LinearScaleQuestion.js\";\r\nimport TextField from \"./TextField\";\r\nimport Image from \"./Image.js\";\r\nconst useStyles = questionStyle;\r\n\r\nfunction Page(props) {\r\n  const classes = useStyles();\r\n\r\n  const newContentSorter = (item, i) => {\r\n    switch (item.data.type) {\r\n      case \"Multiple Choice\":\r\n        return <MultipleChoiceQuestion data={item.data} contentIndex={i} sectionIndex={props.sectionIndex} />;\r\n      case \"Short Text\":\r\n        return <TextQuestion data={item.data} contentIndex={i} sectionIndex={props.sectionIndex} />;\r\n      case \"Linear Scale\":\r\n        return <LinearScaleQuestion data={item.data} contentIndex={i} sectionIndex={props.sectionIndex} />;\r\n      //return renderLinearScaleQuestion(item);\r\n      case \"Ranking\":\r\n        return <RankingQuestion data={item.data} contentIndex={i} sectionIndex={props.sectionIndex} />;\r\n    }\r\n    switch (item.type) {\r\n      case \"Image\":\r\n        return <Image data={item.data} />;\r\n      case \"Text\":\r\n        return <TextField data={item.data} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/*Mappa tutti i contenuti (contents:[] nel json) della pagina corrente e per ogni contenuto chiama il contentSorter*/}\r\n      {props.contents.map((s, i) => {\r\n        \r\n        return <div key={s.contentId + i}>{newContentSorter(s, i)}</div>;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RandomNamesContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Image.js",["202","203","204"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\LinearScaleQuestion.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RankingQuestion.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\n// Importing Material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  Menu,\r\n  Select,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Droppable, Draggable, DragDropContext } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport SelectedSurveyContext from \"../../SelectedSurveyContext\";\r\nimport TextQuestion from \"./TextQuestion.js\";\r\nimport MultipleChoiceQuestion from \"./MultipleChoiceQuestion.js\";\r\nconst useStyles = questionStyle;\r\n\r\nfunction RankingQuestion(props){\r\n\r\n  const classes = useStyles();\r\n\r\n  const [choices, setChoices] = useState(props.data.choices);\r\n\r\n  return (\r\n      <Typography component={\"span\"}>\r\n        <Grid>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            width={400}\r\n            component=\"div\"\r\n            className={classes.wrapper}\r\n          >\r\n            <div>\r\n              <Box align=\"left\" className={classes.titleContainer}>\r\n                {props.data.title}\r\n              </Box>\r\n\r\n              <Box align=\"left\" className={classes.elementContainer}>\r\n                {props.data.description}\r\n              </Box>\r\n\r\n              <DragDropContext\r\n                onDragEnd={(param) => {\r\n\r\n                  //Indici dei due elementi da scambiare\r\n                  const srcIndex = param.source.index;\r\n                  const destIndex = param.destination?.index;\r\n\r\n                  let newList = [...choices]; //Copia dell'array di scelte da ordinare\r\n                  const [reorderList] = newList.splice(\r\n                    srcIndex,\r\n                    1\r\n                  ); //si rimuove l'indice sorgente dal nuovo array\r\n                  newList.splice(destIndex, 0, reorderList); //si riaggiunge l'indice nell'array nella nuova posizione\r\n                  console.log(\"The new list is\", newList);\r\n                  setChoices(newList);\r\n                }}\r\n              >\r\n                <Droppable droppableId=\"1\">\r\n                  {(provided, _) => (\r\n                    <div\r\n                      className={classes.rankingContainer}\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                    >\r\n                      {choices.map((item, i) => (\r\n                        <Draggable\r\n                          key={item + i}\r\n                          index={i}\r\n                          draggableId={\"draggable-\" + item.id}\r\n                        >\r\n                          {(provided, snapshot) => (\r\n                            <Card\r\n                              className={classes.dragndropItem}\r\n                              ref={provided.innerRef}\r\n                              {...provided.dragHandleProps}\r\n                              {...provided.draggableProps}\r\n                            >\r\n                              <CardContent>\r\n                                <DragHandleIcon\r\n                                  className={classes.dragHandleIcon}\r\n                                />\r\n                                <div className={classes.rankingCardContent}>\r\n                                  {item.value}\r\n                                </div>\r\n                              </CardContent>\r\n                            </Card>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default RankingQuestion;","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\MultipleChoiceQuestion.js",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\TextQuestion.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\TextField.js",["307","308"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\nimport RandomNamesContext from \"./RandomNamesContext\";\r\nimport { Box, Typography, Grid, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = questionStyle;\r\n\r\nfunction TextField(props) {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState();\r\n  const randomNames = useContext(RandomNamesContext);\r\n\r\n  useEffect(() => {\r\n    let tempGeneratedNumber = undefined;\r\n    if (props.data.randomStatus) {\r\n      randomNames.forEach((r) => {\r\n        if (r.randomName === props.data.randomName) {\r\n          tempGeneratedNumber = r.generatedNumber;\r\n        }\r\n      });\r\n      if (tempGeneratedNumber === undefined) return;\r\n      let imgPath = new URL(\"http://localhost:9000/getRandomText\");\r\n      imgPath.search = new URLSearchParams({\r\n        textName: tempGeneratedNumber,\r\n      });\r\n      fetch(imgPath)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"The resulting text is \", data);\r\n          setText(data);\r\n        });\r\n    } else {\r\n      setText(props.data.description);\r\n    }\r\n  }, [randomNames]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography component={\"span\"} color=\"textPrimary\" align=\"center\">\r\n        <Grid>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            width={400}\r\n            component=\"div\"\r\n            className={classes.wrapper}\r\n          >\r\n            <Box align=\"left\" className={classes.titleContainer}>\r\n              {props.data.title}\r\n            </Box>\r\n            {/* Create the class descriptionContainer (or change its name) into the style file */}\r\n            <Box align=\"left\" className={classes.descriptionContainer} className={classes.elementContainer}>\r\n              {text}\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextField;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\DataCollectorContext.js",[],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":18,"column":7,"nodeType":"315","messageId":"316","endLine":18,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":93,"column":5,"nodeType":"319","messageId":"320","endLine":117,"endColumn":6},{"ruleId":"317","severity":1,"message":"318","line":122,"column":7,"nodeType":"319","messageId":"320","endLine":127,"endColumn":8},{"ruleId":"313","severity":1,"message":"321","line":30,"column":5,"nodeType":"315","messageId":"316","endLine":30,"endColumn":15},{"ruleId":"313","severity":1,"message":"322","line":32,"column":5,"nodeType":"315","messageId":"316","endLine":32,"endColumn":16},{"ruleId":"313","severity":1,"message":"323","line":20,"column":8,"nodeType":"315","messageId":"316","endLine":20,"endColumn":21},{"ruleId":"313","severity":1,"message":"324","line":23,"column":10,"nodeType":"315","messageId":"316","endLine":23,"endColumn":25},{"ruleId":"313","severity":1,"message":"325","line":23,"column":27,"nodeType":"315","messageId":"316","endLine":23,"endColumn":36},{"ruleId":"313","severity":1,"message":"326","line":27,"column":8,"nodeType":"315","messageId":"316","endLine":27,"endColumn":21},{"ruleId":"313","severity":1,"message":"327","line":36,"column":8,"nodeType":"315","messageId":"316","endLine":36,"endColumn":27},{"ruleId":"328","severity":1,"message":"329","line":87,"column":6,"nodeType":"330","endLine":87,"endColumn":8,"suggestions":"331"},{"ruleId":"313","severity":1,"message":"332","line":90,"column":9,"nodeType":"315","messageId":"316","endLine":90,"endColumn":18},{"ruleId":"313","severity":1,"message":"333","line":287,"column":13,"nodeType":"315","messageId":"316","endLine":287,"endColumn":35},{"ruleId":"334","severity":1,"message":"335","line":363,"column":53,"nodeType":"336","messageId":"337","endLine":363,"endColumn":55},{"ruleId":"338","severity":1,"message":"339","line":40,"column":24,"nodeType":"340","messageId":"341","endLine":40,"endColumn":26},{"ruleId":"338","severity":1,"message":"339","line":48,"column":24,"nodeType":"340","messageId":"341","endLine":48,"endColumn":26},{"ruleId":"328","severity":1,"message":"342","line":117,"column":6,"nodeType":"330","endLine":117,"endColumn":19,"suggestions":"343"},{"ruleId":"328","severity":1,"message":"344","line":163,"column":6,"nodeType":"330","endLine":163,"endColumn":8,"suggestions":"345"},{"ruleId":"313","severity":1,"message":"346","line":1,"column":10,"nodeType":"315","messageId":"316","endLine":1,"endColumn":26},{"ruleId":"313","severity":1,"message":"347","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":13},{"ruleId":"313","severity":1,"message":"348","line":27,"column":8,"nodeType":"315","messageId":"316","endLine":27,"endColumn":22},{"ruleId":"313","severity":1,"message":"349","line":33,"column":10,"nodeType":"315","messageId":"316","endLine":33,"endColumn":19},{"ruleId":"313","severity":1,"message":"350","line":42,"column":7,"nodeType":"315","messageId":"316","endLine":42,"endColumn":18},{"ruleId":"328","severity":1,"message":"351","line":95,"column":6,"nodeType":"330","endLine":95,"endColumn":8,"suggestions":"352"},{"ruleId":"313","severity":1,"message":"353","line":16,"column":3,"nodeType":"315","messageId":"316","endLine":16,"endColumn":15},{"ruleId":"313","severity":1,"message":"354","line":17,"column":3,"nodeType":"315","messageId":"316","endLine":17,"endColumn":15},{"ruleId":"313","severity":1,"message":"349","line":21,"column":10,"nodeType":"315","messageId":"316","endLine":21,"endColumn":19},{"ruleId":"313","severity":1,"message":"348","line":23,"column":8,"nodeType":"315","messageId":"316","endLine":23,"endColumn":22},{"ruleId":"313","severity":1,"message":"355","line":29,"column":8,"nodeType":"315","messageId":"316","endLine":29,"endColumn":21},{"ruleId":"313","severity":1,"message":"356","line":30,"column":8,"nodeType":"315","messageId":"316","endLine":30,"endColumn":21},{"ruleId":"313","severity":1,"message":"357","line":31,"column":8,"nodeType":"315","messageId":"316","endLine":31,"endColumn":19},{"ruleId":"313","severity":1,"message":"358","line":32,"column":8,"nodeType":"315","messageId":"316","endLine":32,"endColumn":30},{"ruleId":"313","severity":1,"message":"359","line":33,"column":8,"nodeType":"315","messageId":"316","endLine":33,"endColumn":20},{"ruleId":"313","severity":1,"message":"360","line":34,"column":8,"nodeType":"315","messageId":"316","endLine":34,"endColumn":23},{"ruleId":"313","severity":1,"message":"361","line":35,"column":8,"nodeType":"315","messageId":"316","endLine":35,"endColumn":24},{"ruleId":"328","severity":1,"message":"362","line":60,"column":6,"nodeType":"330","endLine":60,"endColumn":8,"suggestions":"363"},{"ruleId":"313","severity":1,"message":"364","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"365","line":12,"column":3,"nodeType":"315","messageId":"316","endLine":12,"endColumn":19},{"ruleId":"313","severity":1,"message":"366","line":13,"column":3,"nodeType":"315","messageId":"316","endLine":13,"endColumn":9},{"ruleId":"313","severity":1,"message":"349","line":16,"column":10,"nodeType":"315","messageId":"316","endLine":16,"endColumn":19},{"ruleId":"313","severity":1,"message":"348","line":18,"column":8,"nodeType":"315","messageId":"316","endLine":18,"endColumn":22},{"ruleId":"313","severity":1,"message":"356","line":24,"column":8,"nodeType":"315","messageId":"316","endLine":24,"endColumn":21},{"ruleId":"313","severity":1,"message":"323","line":25,"column":8,"nodeType":"315","messageId":"316","endLine":25,"endColumn":21},{"ruleId":"313","severity":1,"message":"367","line":12,"column":3,"nodeType":"315","messageId":"316","endLine":12,"endColumn":9},{"ruleId":"328","severity":1,"message":"368","line":36,"column":6,"nodeType":"330","endLine":36,"endColumn":8,"suggestions":"369"},{"ruleId":"328","severity":1,"message":"370","line":15,"column":6,"nodeType":"330","endLine":15,"endColumn":8,"suggestions":"371"},{"ruleId":"372","severity":1,"message":"373","line":88,"column":11,"nodeType":"374","endLine":88,"endColumn":72},{"ruleId":"313","severity":1,"message":"375","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":26},{"ruleId":"313","severity":1,"message":"376","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"376","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":25},{"ruleId":"313","severity":1,"message":"375","line":1,"column":27,"nodeType":"315","messageId":"316","endLine":1,"endColumn":36},{"ruleId":"313","severity":1,"message":"377","line":1,"column":38,"nodeType":"315","messageId":"316","endLine":1,"endColumn":48},{"ruleId":"313","severity":1,"message":"378","line":12,"column":9,"nodeType":"315","messageId":"316","endLine":12,"endColumn":16},{"ruleId":"317","severity":1,"message":"318","line":15,"column":5,"nodeType":"319","messageId":"320","endLine":25,"endColumn":6},{"ruleId":"317","severity":1,"message":"318","line":26,"column":5,"nodeType":"319","messageId":"320","endLine":31,"endColumn":6},{"ruleId":"313","severity":1,"message":"379","line":1,"column":50,"nodeType":"315","messageId":"316","endLine":1,"endColumn":56},{"ruleId":"328","severity":1,"message":"380","line":41,"column":6,"nodeType":"330","endLine":41,"endColumn":19,"suggestions":"381"},{"ruleId":"382","severity":1,"message":"383","line":59,"column":15,"nodeType":"374","endLine":59,"endColumn":63},{"ruleId":"313","severity":1,"message":"384","line":6,"column":3,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"385","line":7,"column":3,"nodeType":"315","messageId":"316","endLine":7,"endColumn":7},{"ruleId":"313","severity":1,"message":"386","line":8,"column":3,"nodeType":"315","messageId":"316","endLine":8,"endColumn":14},{"ruleId":"313","severity":1,"message":"387","line":9,"column":3,"nodeType":"315","messageId":"316","endLine":9,"endColumn":14},{"ruleId":"313","severity":1,"message":"388","line":10,"column":3,"nodeType":"315","messageId":"316","endLine":10,"endColumn":13},{"ruleId":"313","severity":1,"message":"389","line":11,"column":3,"nodeType":"315","messageId":"316","endLine":11,"endColumn":8},{"ruleId":"313","severity":1,"message":"353","line":12,"column":3,"nodeType":"315","messageId":"316","endLine":12,"endColumn":15},{"ruleId":"313","severity":1,"message":"354","line":13,"column":3,"nodeType":"315","messageId":"316","endLine":13,"endColumn":15},{"ruleId":"313","severity":1,"message":"390","line":14,"column":3,"nodeType":"315","messageId":"316","endLine":14,"endColumn":11},{"ruleId":"313","severity":1,"message":"391","line":15,"column":3,"nodeType":"315","messageId":"316","endLine":15,"endColumn":7},{"ruleId":"313","severity":1,"message":"367","line":16,"column":3,"nodeType":"315","messageId":"316","endLine":16,"endColumn":9},{"ruleId":"313","severity":1,"message":"392","line":17,"column":3,"nodeType":"315","messageId":"316","endLine":17,"endColumn":10},{"ruleId":"313","severity":1,"message":"366","line":19,"column":3,"nodeType":"315","messageId":"316","endLine":19,"endColumn":9},{"ruleId":"313","severity":1,"message":"393","line":20,"column":3,"nodeType":"315","messageId":"316","endLine":20,"endColumn":10},{"ruleId":"313","severity":1,"message":"394","line":22,"column":8,"nodeType":"315","messageId":"316","endLine":22,"endColumn":17},{"ruleId":"313","severity":1,"message":"395","line":29,"column":8,"nodeType":"315","messageId":"316","endLine":29,"endColumn":17},{"ruleId":"313","severity":1,"message":"396","line":30,"column":8,"nodeType":"315","messageId":"316","endLine":30,"endColumn":17},{"ruleId":"313","severity":1,"message":"325","line":31,"column":10,"nodeType":"315","messageId":"316","endLine":31,"endColumn":19},{"ruleId":"313","severity":1,"message":"349","line":31,"column":21,"nodeType":"315","messageId":"316","endLine":31,"endColumn":30},{"ruleId":"313","severity":1,"message":"324","line":31,"column":32,"nodeType":"315","messageId":"316","endLine":31,"endColumn":47},{"ruleId":"313","severity":1,"message":"348","line":32,"column":8,"nodeType":"315","messageId":"316","endLine":32,"endColumn":22},{"ruleId":"313","severity":1,"message":"397","line":33,"column":8,"nodeType":"315","messageId":"316","endLine":33,"endColumn":29},{"ruleId":"313","severity":1,"message":"398","line":34,"column":8,"nodeType":"315","messageId":"316","endLine":34,"endColumn":20},{"ruleId":"313","severity":1,"message":"399","line":35,"column":8,"nodeType":"315","messageId":"316","endLine":35,"endColumn":30},{"ruleId":"313","severity":1,"message":"400","line":36,"column":8,"nodeType":"315","messageId":"316","endLine":36,"endColumn":23},{"ruleId":"328","severity":1,"message":"401","line":59,"column":6,"nodeType":"330","endLine":59,"endColumn":14,"suggestions":"402"},{"ruleId":"313","severity":1,"message":"375","line":1,"column":27,"nodeType":"315","messageId":"316","endLine":1,"endColumn":36},{"ruleId":"313","severity":1,"message":"377","line":1,"column":38,"nodeType":"315","messageId":"316","endLine":1,"endColumn":48},{"ruleId":"313","severity":1,"message":"384","line":6,"column":3,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"386","line":8,"column":3,"nodeType":"315","messageId":"316","endLine":8,"endColumn":14},{"ruleId":"313","severity":1,"message":"388","line":10,"column":3,"nodeType":"315","messageId":"316","endLine":10,"endColumn":13},{"ruleId":"313","severity":1,"message":"389","line":11,"column":3,"nodeType":"315","messageId":"316","endLine":11,"endColumn":8},{"ruleId":"313","severity":1,"message":"353","line":12,"column":3,"nodeType":"315","messageId":"316","endLine":12,"endColumn":15},{"ruleId":"313","severity":1,"message":"354","line":13,"column":3,"nodeType":"315","messageId":"316","endLine":13,"endColumn":15},{"ruleId":"313","severity":1,"message":"390","line":14,"column":3,"nodeType":"315","messageId":"316","endLine":14,"endColumn":11},{"ruleId":"313","severity":1,"message":"391","line":15,"column":3,"nodeType":"315","messageId":"316","endLine":15,"endColumn":7},{"ruleId":"313","severity":1,"message":"367","line":16,"column":3,"nodeType":"315","messageId":"316","endLine":16,"endColumn":9},{"ruleId":"313","severity":1,"message":"392","line":17,"column":3,"nodeType":"315","messageId":"316","endLine":17,"endColumn":10},{"ruleId":"313","severity":1,"message":"365","line":18,"column":3,"nodeType":"315","messageId":"316","endLine":18,"endColumn":19},{"ruleId":"313","severity":1,"message":"366","line":19,"column":3,"nodeType":"315","messageId":"316","endLine":19,"endColumn":9},{"ruleId":"313","severity":1,"message":"393","line":20,"column":3,"nodeType":"315","messageId":"316","endLine":20,"endColumn":10},{"ruleId":"313","severity":1,"message":"394","line":22,"column":8,"nodeType":"315","messageId":"316","endLine":22,"endColumn":17},{"ruleId":"313","severity":1,"message":"403","line":26,"column":8,"nodeType":"315","messageId":"316","endLine":26,"endColumn":13},{"ruleId":"313","severity":1,"message":"404","line":27,"column":8,"nodeType":"315","messageId":"316","endLine":27,"endColumn":18},{"ruleId":"313","severity":1,"message":"405","line":28,"column":8,"nodeType":"315","messageId":"316","endLine":28,"endColumn":19},{"ruleId":"313","severity":1,"message":"395","line":29,"column":8,"nodeType":"315","messageId":"316","endLine":29,"endColumn":17},{"ruleId":"313","severity":1,"message":"396","line":30,"column":8,"nodeType":"315","messageId":"316","endLine":30,"endColumn":17},{"ruleId":"313","severity":1,"message":"397","line":33,"column":8,"nodeType":"315","messageId":"316","endLine":33,"endColumn":29},{"ruleId":"313","severity":1,"message":"398","line":34,"column":8,"nodeType":"315","messageId":"316","endLine":34,"endColumn":20},{"ruleId":"313","severity":1,"message":"399","line":35,"column":8,"nodeType":"315","messageId":"316","endLine":35,"endColumn":30},{"ruleId":"313","severity":1,"message":"375","line":1,"column":27,"nodeType":"315","messageId":"316","endLine":1,"endColumn":36},{"ruleId":"313","severity":1,"message":"384","line":6,"column":3,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"385","line":7,"column":3,"nodeType":"315","messageId":"316","endLine":7,"endColumn":7},{"ruleId":"313","severity":1,"message":"386","line":8,"column":3,"nodeType":"315","messageId":"316","endLine":8,"endColumn":14},{"ruleId":"313","severity":1,"message":"387","line":9,"column":3,"nodeType":"315","messageId":"316","endLine":9,"endColumn":14},{"ruleId":"313","severity":1,"message":"388","line":10,"column":3,"nodeType":"315","messageId":"316","endLine":10,"endColumn":13},{"ruleId":"313","severity":1,"message":"389","line":11,"column":3,"nodeType":"315","messageId":"316","endLine":11,"endColumn":8},{"ruleId":"313","severity":1,"message":"353","line":12,"column":3,"nodeType":"315","messageId":"316","endLine":12,"endColumn":15},{"ruleId":"313","severity":1,"message":"354","line":13,"column":3,"nodeType":"315","messageId":"316","endLine":13,"endColumn":15},{"ruleId":"313","severity":1,"message":"390","line":14,"column":3,"nodeType":"315","messageId":"316","endLine":14,"endColumn":11},{"ruleId":"313","severity":1,"message":"391","line":15,"column":3,"nodeType":"315","messageId":"316","endLine":15,"endColumn":7},{"ruleId":"313","severity":1,"message":"367","line":16,"column":3,"nodeType":"315","messageId":"316","endLine":16,"endColumn":9},{"ruleId":"313","severity":1,"message":"392","line":17,"column":3,"nodeType":"315","messageId":"316","endLine":17,"endColumn":10},{"ruleId":"313","severity":1,"message":"366","line":19,"column":3,"nodeType":"315","messageId":"316","endLine":19,"endColumn":9},{"ruleId":"313","severity":1,"message":"393","line":20,"column":3,"nodeType":"315","messageId":"316","endLine":20,"endColumn":10},{"ruleId":"313","severity":1,"message":"394","line":22,"column":8,"nodeType":"315","messageId":"316","endLine":22,"endColumn":17},{"ruleId":"313","severity":1,"message":"405","line":28,"column":8,"nodeType":"315","messageId":"316","endLine":28,"endColumn":19},{"ruleId":"313","severity":1,"message":"395","line":29,"column":8,"nodeType":"315","messageId":"316","endLine":29,"endColumn":17},{"ruleId":"313","severity":1,"message":"396","line":30,"column":8,"nodeType":"315","messageId":"316","endLine":30,"endColumn":17},{"ruleId":"313","severity":1,"message":"325","line":31,"column":10,"nodeType":"315","messageId":"316","endLine":31,"endColumn":19},{"ruleId":"313","severity":1,"message":"349","line":31,"column":21,"nodeType":"315","messageId":"316","endLine":31,"endColumn":30},{"ruleId":"313","severity":1,"message":"324","line":31,"column":32,"nodeType":"315","messageId":"316","endLine":31,"endColumn":47},{"ruleId":"313","severity":1,"message":"348","line":32,"column":8,"nodeType":"315","messageId":"316","endLine":32,"endColumn":22},{"ruleId":"313","severity":1,"message":"406","line":45,"column":7,"nodeType":"315","messageId":"316","endLine":45,"endColumn":17},{"ruleId":"313","severity":1,"message":"407","line":46,"column":10,"nodeType":"315","messageId":"316","endLine":46,"endColumn":16},{"ruleId":"382","severity":1,"message":"383","line":81,"column":21,"nodeType":"374","endLine":81,"endColumn":81},{"ruleId":"313","severity":1,"message":"375","line":1,"column":27,"nodeType":"315","messageId":"316","endLine":1,"endColumn":36},{"ruleId":"313","severity":1,"message":"384","line":6,"column":3,"nodeType":"315","messageId":"316","endLine":6,"endColumn":9},{"ruleId":"313","severity":1,"message":"385","line":7,"column":3,"nodeType":"315","messageId":"316","endLine":7,"endColumn":7},{"ruleId":"313","severity":1,"message":"386","line":8,"column":3,"nodeType":"315","messageId":"316","endLine":8,"endColumn":14},{"ruleId":"313","severity":1,"message":"387","line":9,"column":3,"nodeType":"315","messageId":"316","endLine":9,"endColumn":14},{"ruleId":"313","severity":1,"message":"388","line":10,"column":3,"nodeType":"315","messageId":"316","endLine":10,"endColumn":13},{"ruleId":"313","severity":1,"message":"389","line":11,"column":3,"nodeType":"315","messageId":"316","endLine":11,"endColumn":8},{"ruleId":"313","severity":1,"message":"353","line":12,"column":3,"nodeType":"315","messageId":"316","endLine":12,"endColumn":15},{"ruleId":"313","severity":1,"message":"354","line":13,"column":3,"nodeType":"315","messageId":"316","endLine":13,"endColumn":15},{"ruleId":"313","severity":1,"message":"390","line":14,"column":3,"nodeType":"315","messageId":"316","endLine":14,"endColumn":11},{"ruleId":"313","severity":1,"message":"391","line":15,"column":3,"nodeType":"315","messageId":"316","endLine":15,"endColumn":7},{"ruleId":"313","severity":1,"message":"367","line":16,"column":3,"nodeType":"315","messageId":"316","endLine":16,"endColumn":9},{"ruleId":"313","severity":1,"message":"392","line":17,"column":3,"nodeType":"315","messageId":"316","endLine":17,"endColumn":10},{"ruleId":"313","severity":1,"message":"365","line":18,"column":3,"nodeType":"315","messageId":"316","endLine":18,"endColumn":19},{"ruleId":"313","severity":1,"message":"366","line":19,"column":3,"nodeType":"315","messageId":"316","endLine":19,"endColumn":9},{"ruleId":"313","severity":1,"message":"393","line":20,"column":3,"nodeType":"315","messageId":"316","endLine":20,"endColumn":10},{"ruleId":"313","severity":1,"message":"394","line":22,"column":8,"nodeType":"315","messageId":"316","endLine":22,"endColumn":17},{"ruleId":"313","severity":1,"message":"403","line":26,"column":8,"nodeType":"315","messageId":"316","endLine":26,"endColumn":13},{"ruleId":"313","severity":1,"message":"404","line":27,"column":8,"nodeType":"315","messageId":"316","endLine":27,"endColumn":18},{"ruleId":"313","severity":1,"message":"405","line":28,"column":8,"nodeType":"315","messageId":"316","endLine":28,"endColumn":19},{"ruleId":"313","severity":1,"message":"395","line":29,"column":8,"nodeType":"315","messageId":"316","endLine":29,"endColumn":17},{"ruleId":"313","severity":1,"message":"325","line":31,"column":10,"nodeType":"315","messageId":"316","endLine":31,"endColumn":19},{"ruleId":"313","severity":1,"message":"349","line":31,"column":21,"nodeType":"315","messageId":"316","endLine":31,"endColumn":30},{"ruleId":"313","severity":1,"message":"324","line":31,"column":32,"nodeType":"315","messageId":"316","endLine":31,"endColumn":47},{"ruleId":"313","severity":1,"message":"348","line":32,"column":8,"nodeType":"315","messageId":"316","endLine":32,"endColumn":22},{"ruleId":"313","severity":1,"message":"397","line":33,"column":8,"nodeType":"315","messageId":"316","endLine":33,"endColumn":29},{"ruleId":"328","severity":1,"message":"408","line":35,"column":6,"nodeType":"330","endLine":35,"endColumn":19,"suggestions":"409"},{"ruleId":"410","severity":1,"message":"411","line":51,"column":72,"nodeType":"412","endLine":51,"endColumn":108},"no-native-reassign",["413"],"no-negated-in-lhs",["414"],"no-unused-vars","'surveyz' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'secondPage' is assigned a value but never used.","'otherSurvey' is assigned a value but never used.","'ImageInputBtn' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'VideoCallIcon' is defined but never used.","'PlaceholdersContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMaxContentId', 'props.json', and 'updateRandomNumbers'. Either include them or remove the dependency array.","ArrayExpression",["415"],"'onDragEnd' is assigned a value but never used.","'onOpenEmbedVideoDialog' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'jsonData.pages'. Either include it or remove the dependency array.",["416"],"React Hook useEffect has missing dependencies: 'jsonData.id' and 'jsonData.pages'. Either include them or remove the dependency array.",["417"],"'BottomNavigation' is defined but never used.","'red' is defined but never used.","'DragHandleIcon' is defined but never used.","'Draggable' is defined but never used.","'initialData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mandatory', 'question.title', 'question.type', and 'updateQuestion'. Either include them or remove the dependency array.",["418"],"'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'QuestionTypes' is defined but never used.","'ShortTextIcon' is defined but never used.","'SubjectIcon' is defined but never used.","'RadioButtonCheckedIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'LinearScaleIcon' is defined but never used.","'ImportExportIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'randomNumbersNames'. Either include it or remove the dependency array.",["419"],"'Fragment' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'maxRange', 'minRange', 'name', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["420"],"React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["421"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'classes' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'props.data.img', 'props.data.randomName', and 'props.data.randomStatus'. Either include them or remove the dependency array. If 'setImage' needs the current value of 'props.data.img', you can also switch to useReducer instead of useState and read 'props.data.img' in the reducer.",["422"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'IconButton' is defined but never used.","'Input' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Divider' is defined but never used.","'Tooltip' is defined but never used.","'Container' is defined but never used.","'FormLabel' is defined but never used.","'TextField' is defined but never used.","'SelectedSurveyContext' is defined but never used.","'TextQuestion' is defined but never used.","'MultipleChoiceQuestion' is defined but never used.","'RankingQuestion' is defined but never used.","React Hook useEffect has missing dependencies: 'props.contentIndex', 'props.sectionIndex', and 'updateAnswer'. Either include them or remove the dependency array.",["423"],"'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'tempAnswer' is assigned a value but never used.","'answer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.data.description', 'props.data.randomName', and 'props.data.randomStatus'. Either include them or remove the dependency array. If 'setText' needs the current value of 'props.data.description', you can also switch to useReducer instead of useState and read 'props.data.description' in the reducer.",["424"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},"Update the dependencies array to be: [getMaxContentId, props.json, updateRandomNumbers]",{"range":"445","text":"446"},"Update the dependencies array to be: [jsonData.pages, randomNames]",{"range":"447","text":"448"},"Update the dependencies array to be: [jsonData.id, jsonData.pages]",{"range":"449","text":"450"},"Update the dependencies array to be: [mandatory, question.title, question.type, updateQuestion]",{"range":"451","text":"452"},"Update the dependencies array to be: [randomNumbersNames]",{"range":"453","text":"454"},"Update the dependencies array to be: [maxRange, minRange, name, props]",{"range":"455","text":"456"},"Update the dependencies array to be: [content]",{"range":"457","text":"458"},"Update the dependencies array to be: [props.data.img, props.data.randomName, props.data.randomStatus, randomNames]",{"range":"459","text":"460"},"Update the dependencies array to be: [answer, props.contentIndex, props.sectionIndex, updateAnswer]",{"range":"461","text":"462"},"Update the dependencies array to be: [props.data.description, props.data.randomName, props.data.randomStatus, randomNames]",{"range":"463","text":"464"},[2638,2640],"[getMaxContentId, props.json, updateRandomNumbers]",[4504,4517],"[jsonData.pages, randomNames]",[6013,6015],"[jsonData.id, jsonData.pages]",[2973,2975],"[mandatory, question.title, question.type, updateQuestion]",[1955,1957],"[randomNumbersNames]",[1016,1018],"[maxRange, minRange, name, props]",[503,505],"[content]",[1410,1423],"[props.data.img, props.data.randomName, props.data.randomStatus, randomNames]",[1876,1884],"[answer, props.contentIndex, props.sectionIndex, updateAnswer]",[1177,1190],"[props.data.description, props.data.randomName, props.data.randomStatus, randomNames]"]