[{"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\index.js":"1","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\App.js":"2","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\tmpSurveys.js":"3","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\editorStyles.js":"4","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\SelectedSurveyContext.js":"5","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\pages.js":"6","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NavBar.js":"7","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MainPage.js":"8","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewSurvey.js":"9","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\View.js":"10","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\JsonLoader.js":"11","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\viewStyles.js":"12","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\ImageInputBtn.js":"13","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewQuestion.js":"14","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewImage.js":"15","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewTextField.js":"16","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewRandomNumber.js":"17","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\PlaceholdersContext.js":"18","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\contentTypes.js":"19","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\surveys\\Survey.js":"20","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\RandomGallery.js":"21","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\LinearScaleQuestion.js":"22","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\questionTypes.js":"23","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MultipleChoiceQuestion.js":"24","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\index.js":"25","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\App.js":"26","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\SelectedSurveyContext.js":"27","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\tmpSurveys.js":"28","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\editorStyles.js":"29","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\pages.js":"30","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NavBar.js":"31","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\MainPage.js":"32","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewSurvey.js":"33","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\View.js":"34","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\JsonLoader.js":"35","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\viewStyles.js":"36","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\ImageInputBtn.js":"37","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewQuestion.js":"38","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewImage.js":"39","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewRandomNumber.js":"40","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\PlaceholdersContext.js":"41","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewTextField.js":"42","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\contentTypes.js":"43","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\surveys\\Survey.js":"44","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\LinearScaleQuestion.js":"45","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\RandomGallery.js":"46","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\questionTypes.js":"47","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\MultipleChoiceQuestion.js":"48","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\Page.js":"49","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\TextQuestion.js":"50","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\MultipleChoiceQuestion.js":"51","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\RankingQuestion.js":"52","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\LinearScaleQuestion.js":"53","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\Image.js":"54","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\RandomNamesContext.js":"55","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Page.js":"56","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RandomNamesContext.js":"57","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Image.js":"58","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\LinearScaleQuestion.js":"59","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RankingQuestion.js":"60","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\MultipleChoiceQuestion.js":"61","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\TextQuestion.js":"62"},{"size":230,"mtime":1614846956021,"results":"63","hashOfConfig":"64"},{"size":4941,"mtime":1614872742432,"results":"65","hashOfConfig":"64"},{"size":4677,"mtime":1614846956024,"results":"66","hashOfConfig":"64"},{"size":9377,"mtime":1614873652246,"results":"67","hashOfConfig":"64"},{"size":129,"mtime":1614846956003,"results":"68","hashOfConfig":"64"},{"size":119,"mtime":1614846956013,"results":"69","hashOfConfig":"64"},{"size":905,"mtime":1614846956008,"results":"70","hashOfConfig":"64"},{"size":3814,"mtime":1614985291573,"results":"71","hashOfConfig":"64"},{"size":25925,"mtime":1614872742461,"results":"72","hashOfConfig":"64"},{"size":438,"mtime":1614185297931,"results":"73","hashOfConfig":"64"},{"size":6618,"mtime":1615027890911,"results":"74","hashOfConfig":"64"},{"size":2188,"mtime":1614846956025,"results":"75","hashOfConfig":"64"},{"size":1564,"mtime":1614846956004,"results":"76","hashOfConfig":"64"},{"size":12195,"mtime":1614846956010,"results":"77","hashOfConfig":"64"},{"size":7670,"mtime":1614846956008,"results":"78","hashOfConfig":"64"},{"size":3245,"mtime":1614846956013,"results":"79","hashOfConfig":"64"},{"size":3842,"mtime":1614846956011,"results":"80","hashOfConfig":"64"},{"size":125,"mtime":1614846956013,"results":"81","hashOfConfig":"64"},{"size":175,"mtime":1614846956016,"results":"82","hashOfConfig":"64"},{"size":8883,"mtime":1614846956023,"results":"83","hashOfConfig":"64"},{"size":3537,"mtime":1614873652214,"results":"84","hashOfConfig":"64"},{"size":2868,"mtime":1614846956005,"results":"85","hashOfConfig":"64"},{"size":238,"mtime":1614846956014,"results":"86","hashOfConfig":"64"},{"size":1810,"mtime":1614846956007,"results":"87","hashOfConfig":"64"},{"size":230,"mtime":1614846956021,"results":"88","hashOfConfig":"89"},{"size":4941,"mtime":1614872742432,"results":"90","hashOfConfig":"89"},{"size":129,"mtime":1614846956003,"results":"91","hashOfConfig":"89"},{"size":4677,"mtime":1614846956024,"results":"92","hashOfConfig":"89"},{"size":9377,"mtime":1614873652246,"results":"93","hashOfConfig":"89"},{"size":119,"mtime":1614846956013,"results":"94","hashOfConfig":"89"},{"size":905,"mtime":1614846956008,"results":"95","hashOfConfig":"89"},{"size":3814,"mtime":1614985291573,"results":"96","hashOfConfig":"89"},{"size":25925,"mtime":1614872742461,"results":"97","hashOfConfig":"89"},{"size":438,"mtime":1614185297931,"results":"98","hashOfConfig":"89"},{"size":6618,"mtime":1615027890911,"results":"99","hashOfConfig":"89"},{"size":2188,"mtime":1614846956025,"results":"100","hashOfConfig":"89"},{"size":1564,"mtime":1614846956004,"results":"101","hashOfConfig":"89"},{"size":12195,"mtime":1614846956010,"results":"102","hashOfConfig":"89"},{"size":7670,"mtime":1614846956008,"results":"103","hashOfConfig":"89"},{"size":3842,"mtime":1614846956011,"results":"104","hashOfConfig":"89"},{"size":125,"mtime":1614846956013,"results":"105","hashOfConfig":"89"},{"size":3245,"mtime":1614846956013,"results":"106","hashOfConfig":"89"},{"size":175,"mtime":1614846956016,"results":"107","hashOfConfig":"89"},{"size":8883,"mtime":1614846956023,"results":"108","hashOfConfig":"89"},{"size":2868,"mtime":1614846956005,"results":"109","hashOfConfig":"89"},{"size":3537,"mtime":1614873652214,"results":"110","hashOfConfig":"89"},{"size":238,"mtime":1614846956014,"results":"111","hashOfConfig":"89"},{"size":1810,"mtime":1614846956007,"results":"112","hashOfConfig":"89"},{"size":3736,"mtime":1615025844685,"results":"113","hashOfConfig":"89"},{"size":2113,"mtime":1614967504781,"results":"114","hashOfConfig":"89"},{"size":2986,"mtime":1614968532793,"results":"115","hashOfConfig":"89"},{"size":4235,"mtime":1614984703173,"results":"116","hashOfConfig":"89"},{"size":3854,"mtime":1614968507379,"results":"117","hashOfConfig":"89"},{"size":3108,"mtime":1615028653269,"results":"118","hashOfConfig":"89"},{"size":123,"mtime":1614989861933,"results":"119","hashOfConfig":"89"},{"size":3736,"mtime":1615025844685,"results":"120","hashOfConfig":"64"},{"size":123,"mtime":1614989861933,"results":"121","hashOfConfig":"64"},{"size":3108,"mtime":1615028653269,"results":"122","hashOfConfig":"64"},{"size":3854,"mtime":1614968507379,"results":"123","hashOfConfig":"64"},{"size":4235,"mtime":1614984703173,"results":"124","hashOfConfig":"64"},{"size":2986,"mtime":1614968532793,"results":"125","hashOfConfig":"64"},{"size":2113,"mtime":1614967504781,"results":"126","hashOfConfig":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"ofat9x",{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"129"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"129"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"129"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"129"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"129"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"129"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"129"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"129"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"do0ei",{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"189"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"189"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"189"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"189"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"189"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"189"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"189"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"189"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"189"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"189"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"189"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"189"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"189"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\index.js",[],["268","269"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\App.js",["270","271","272"],"import React, { useState, useEffect } from \"react\";\r\nimport NavBar from \"./components/editor/NavBar\";\r\nimport MainPage from \"./components/editor/MainPage\";\r\nimport NewSurvey from \"./components/editor/NewSurvey\";\r\nimport View from \"./components/view/View\";\r\nimport pages from \"./components/pages\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { appStyle } from \"./editorStyles\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport { mySimpleSurvey, mySurvey } from \"./tmpSurveys\";\r\nimport SelectedSurveyContext from \"./SelectedSurveyContext\";\r\n\r\nconst useStyles = appStyle;\r\n\r\n// Initial surveys\r\nconst surveyz = [mySurvey, mySimpleSurvey];\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [page, setPage] = useState(pages.MAIN);\r\n  const [showDrawer, setShowDrawer] = useState(false);\r\n  const [selectedSurvey, setSelectedSurvey] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getSurveysFromServer();\r\n  }, []);\r\n\r\n  const switchDrawer = (value) => {\r\n    setShowDrawer(value);\r\n  };\r\n\r\n  const getSurveysFromServer = () => {\r\n    fetch(\"http://localhost:9000/getSurveys\")\r\n      .then((response) => response.json())\r\n      .then((data) => setSurveys(data));\r\n  };\r\n\r\n  const addSurvey = (newSurvey) => {\r\n    if (newSurvey.id) {\r\n      // I'm editing an already existing survey\r\n      fetch(\"http://localhost:9000/editSurvey\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newSurvey),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.status === \"saved\") {\r\n            getSurveysFromServer();\r\n          } else console.error(\"FAILED TO INSERT THE SURVEY\");\r\n        });\r\n    } else {\r\n      fetch(\"http://localhost:9000/insertSurvey\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newSurvey),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.status === \"saved\") {\r\n            getSurveysFromServer();\r\n          } else console.error(\"FAILED TO INSERT THE SURVEY\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const deleteSurvey = (survey) => {\r\n    fetch(\"http://localhost:9000/deleteSurvey\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(survey),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === \"saved\") {\r\n          fetch(\"http://localhost:9000/getSurveys\")\r\n            .then((response) => response.json())\r\n            .then((data) => setSurveys(data));\r\n        } else console.error(\"FAILED TO DELETE THE SURVEY\");\r\n      });\r\n  };\r\n\r\n  const checkPage = () => {\r\n    switch (page) {\r\n      case pages.MAIN:\r\n        return (\r\n          <MainPage\r\n            surveys={surveys}\r\n            setPage={setPage}\r\n            selectSurvey={setSelectedSurvey}\r\n            deleteSurvey={deleteSurvey}\r\n          />\r\n        );\r\n      case pages.NEWSURVEY:\r\n        return (\r\n          <NewSurvey\r\n            json={selectedSurvey}\r\n            setPage={setPage}\r\n            addSurvey={addSurvey}\r\n          />\r\n        );\r\n      case pages.VIEWSURVEY:\r\n        return (\r\n          <SelectedSurveyContext.Provider value={selectedSurvey}>\r\n            <View />\r\n          </SelectedSurveyContext.Provider>\r\n        );\r\n    }\r\n  };\r\n\r\n  const renderDrawer = () => {\r\n    const renderIcon = (index) => {\r\n      switch (index) {\r\n        case 0:\r\n          return <DescriptionIcon />;\r\n        case 1:\r\n          return <TrendingUpIcon />;\r\n      }\r\n    };\r\n    const onItemClick = (index) => {\r\n      switch (index) {\r\n        case 0:\r\n          setPage(pages.MAIN);\r\n          setShowDrawer(false);\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    };\r\n    return (\r\n      <div className={classes.drawer}>\r\n        <List>\r\n          {[\"Surveys\", \"Statistics\"].map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => {\r\n                onItemClick(index);\r\n              }}\r\n            >\r\n              <ListItemIcon>{renderIcon(index)}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar setDrawer={switchDrawer} />\r\n      {checkPage()}\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={showDrawer}\r\n        onClose={() => {\r\n          switchDrawer(false);\r\n        }}\r\n      >\r\n        {renderDrawer()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\tmpSurveys.js",["273","274"],"import {\r\n  ShortAnswer,\r\n  Paragraph,\r\n  MultipleChoice,\r\n  CheckBox,\r\n  Survey,\r\n  SurveyPage,\r\n} from \"./surveys/Survey\";\r\n\r\nlet firstQuestion = new ShortAnswer(\"My Title\", true);\r\nlet secondQuestion = new Paragraph(\"My Paragraph Title\", true);\r\nlet thirdQuestion = new MultipleChoice(\"My MultipleChoice Title\", true, [\r\n  \"firstMCChoice\",\r\n  \"secondMCChoice\",\r\n  \"thirdMCCChoice\",\r\n]);\r\nlet fourthQuestion = new CheckBox(\"My Checkbox Title\", true, [\r\n  \"firstCBChoice\",\r\n  \"secondCBChoice\",\r\n  \"thirdCBChoice\",\r\n  \"fourthCBChoice\",\r\n]);\r\n\r\nlet firstPage = new SurveyPage([\r\n  firstQuestion,\r\n  secondQuestion,\r\n  thirdQuestion,\r\n  fourthQuestion,\r\n]);\r\nlet secondPage = new SurveyPage([firstQuestion]);\r\n\r\nlet otherSurvey = new Survey(\"Prova1\", \"Desc1\", [firstPage]);\r\nlet mySurvey = {\r\n  title: \"Random01\",\r\n  description: \"RandomDesc\",\r\n  pages: [\r\n    {\r\n        \"pageId\" : \"1\",\r\n        \"contents\": [\r\n          {\r\n            \"type\": \"Question\",\r\n            \"data\": {\r\n              \"type\": \"Multiple Choice\",\r\n              \"title\": \"The AI must decide: Is 40% or more of the nutrients on then plate fat?\",\r\n              \"description\": \"What will the AI decide?\",\r\n              \"choices\": [\r\n                {\r\n                  \"id\" : \"1\",\r\n                  \"value\": \"No, 30% of the nutrients on this plate is not fat.\"\r\n                },\r\n                {\r\n                  \"id\" : \"2\",\r\n                  \"value\": \"Yes, 30% of the nutrients on this plate is not fat.\"\r\n                }\r\n              ],\r\n              \"images\": [\"image01.png\", \"image02.png\"]\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"Question\",\r\n            \"data\": {\r\n              \"type\": \"Short Text\",\r\n              \"title\": \"The AI generated its prediction giving this motivation: it is represented as two curved lines\",\r\n              \"description\": \"What is your decision?\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"Question\",\r\n            \"data\": {\r\n              \"type\": \"Ranking\",\r\n              \"title\": \"Employee Performance review\",\r\n              \"description\": \"Rank these elements sorting them by importance to you\",\r\n              \"choices\": [\r\n                {\r\n                  \"id\": \"1\",\r\n                  \"value\": \"Job Knowledge\"\r\n                },\r\n                {\r\n                  \"id\": \"2\",\r\n                  \"value\": \"Work Quality\"\r\n                },\r\n                {\r\n                  \"id\": \"3\",\r\n                  \"value\": \"Attendance/punctuality\"\r\n                },\r\n                {\r\n                  \"id\": \"4\",\r\n                  \"value\": \"Productivity\"\r\n                },\r\n                {\r\n                  \"id\": \"5\",\r\n                  \"value\": \"Communication Skills\"\r\n                }\r\n              ]\r\n            }\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        pageId: 2,\r\n        contents: [\r\n          {\r\n            contentId: 1,\r\n            type: \"Image\",\r\n            data: {\r\n              title: \"ImagetitleProva\",\r\n              randomName: \"Pippo\",\r\n              randomStatus: true,\r\n            },\r\n          },\r\n          {\r\n            contentId: 2,\r\n            type: \"Random Number\",\r\n            data: { name: \"Pippo\", minRange: 0, maxRange: 100 },\r\n          },\r\n          {\r\n            contentId: 3,\r\n            type: \"Random Number\",\r\n            data: { name: \"Gatto\", minRange: 0, maxRange: 100 },\r\n          },        \r\n        ],\r\n      },\r\n    {\r\n      pageId: 3,\r\n      contents: [\r\n        \r\n        {\r\n          contentId: 1,\r\n          type: \"Image\",\r\n          data: {\r\n            title: \"ImagetitleProva\",\r\n            randomName: \"Cane\",\r\n            randomStatus: true,\r\n          },\r\n        },\r\n        {\r\n          contentId: 2,\r\n          type: \"Random Number\",\r\n          data: { name: \"Cane\", minRange: 0, maxRange: 100 },\r\n        }, \r\n        {\r\n          contentId: 3,\r\n          type: \"Image\",\r\n          data: {\r\n            title: \"ImagetitleProva\",\r\n            randomName: \"Gatto\",\r\n            randomStatus: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nlet mySimpleSurvey = {\r\n  title: \"Random01\",\r\n  description: \"RandomDesc\",\r\n  pages: [\r\n    {\r\n      pageId: 1,\r\n      contents: [\r\n        {\r\n          contentId: 1,\r\n          type: \"Random Number\",\r\n          data: { name: \"Pippo\", minRange: 0, maxRange: 100 },\r\n        },\r\n        {\r\n          contentId: 2,\r\n          type: \"Image\",\r\n          data: {\r\n            title: \"ImagetitleProva\",\r\n            randomName: \"Pippo\",\r\n            randomStatus: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport { mySimpleSurvey, mySurvey };\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\editorStyles.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\SelectedSurveyContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\pages.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NavBar.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MainPage.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewSurvey.js",["275","276","277","278","279","280","281","282","283"],"/* eslint-disable default-case */\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n// Dialog\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport NewQuestion from \"./NewQuestion\";\r\nimport ImageInputBtn from \"./ImageInputBtn\";\r\nimport pages from \"../pages\";\r\n// DragAndDrop\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n// Styles\r\nimport { newSurveyStyle } from \"../../editorStyles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport NewImage from \"./NewImage\";\r\nimport NewTextField from \"./NewTextField\";\r\nimport NewRandomNumber from \"./NewRandomNumber\";\r\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\nimport PlaceholdersContext from \"./PlaceholdersContext\";\r\n\r\nimport content_type from \"../../contentTypes\";\r\n\r\nconst initialData = [\r\n  {\r\n    pageId: 1,\r\n    contents: [\r\n      { contentId: 1, type: content_type.QUESTION, data: {} },\r\n      { contentId: 2, type: content_type.QUESTION, data: {} },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = newSurveyStyle;\r\n\r\nfunction NewSurvey(props) {\r\n  const classes = useStyles();\r\n  const [surveyData, setSurveyData] = useState({\r\n    title: props.json ? props.json.title : \"\",\r\n    description: props.json ? props.json.description : \"\",\r\n  });\r\n  const [sections, setSections] = useState(\r\n    props.json ? props.json.pages : initialData\r\n  );\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [sectionIdCounter, setSectionIdCounter] = useState(\r\n    props.json ? props.json.pages.length : 2\r\n  );\r\n  const [contentIdCounter, setContentIdCounter] = useState(3);\r\n  const [randomNumbers, setRandomNumbers] = useState([\r\n    { pageId: 1, placeholders: [] },\r\n  ]);\r\n\r\n  const getMaxContentId = () => {\r\n    let maxContentId = -1;\r\n    props.json.pages.forEach((page) => {\r\n      page.contents.forEach((cont) => {\r\n        if (cont.contentId > maxContentId) maxContentId = cont.contentId;\r\n      });\r\n    });\r\n    return maxContentId;\r\n  };\r\n\r\n  /*Initializes contentId counter*/\r\n  useEffect(() => {\r\n    if (props.json) {\r\n      const maxContent = getMaxContentId();\r\n      setContentIdCounter(maxContent);\r\n      updateRandomNumbers(true);\r\n    }\r\n  }, []);\r\n\r\n  /*  Updates the state when the drag ends */\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n    console.log(\"The destination is \", destination);\r\n    console.log(\"The source is \", source);\r\n    console.log(\"The draggableId is \", draggableId);\r\n    if (!destination) return;\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    )\r\n      return;\r\n\r\n    let newSections = [...sections]; // array of sections\r\n    let sourcePage = sections.find(\r\n      (c) => c.contentId.toString() === source.droppableId\r\n    ); // section with ID and content\r\n    const sourcePageIndex = sections.indexOf(sourcePage);\r\n    /* Alternative sourcePageIndex -->\r\n    const sourcePageIndex = sections.findIndex(\r\n      (c) => c.id.toString() === source.droppableId\r\n    );\r\n    */\r\n    const movedContent = sourcePage.contents.find(\r\n      (c) => c.contentId.toString() === draggableId\r\n    ); // content that has to be moved\r\n\r\n    // Remove the content from the source page\r\n    sourcePage.contents.splice(source.index, 1);\r\n\r\n    // If the content is moved in the same section that it was before\r\n    if (source.droppableId === destination.droppableId) {\r\n      // Insert the content in the new position of the same section\r\n      sourcePage.contents.splice(destination.index, 0, movedContent);\r\n      // Update\r\n      newSections[sourcePageIndex] = sourcePage;\r\n      setSections(newSections);\r\n      return;\r\n    }\r\n\r\n    let destinationPage = sections.find(\r\n      (c) => c.pageId.toString() === destination.droppableId\r\n    );\r\n    const destinationPageIndex = sections.indexOf(destinationPage);\r\n    destinationPage.contents.splice(destination.index, 0, movedContent);\r\n    // If the source section has no more content, remove it\r\n    newSections[destinationPageIndex] = destinationPage;\r\n    if (sourcePage.contents.length === 0) {\r\n      newSections.splice(sourcePageIndex, 1);\r\n      let counter = sourcePage.pageId;\r\n      for (let s of newSections) {\r\n        if (s.pageId > sourcePage.pageId) {\r\n          s.pageId = counter;\r\n          counter++;\r\n        }\r\n      }\r\n    } else {\r\n      newSections[sourcePageIndex] = sourcePage;\r\n    }\r\n    setSections(newSections);\r\n\r\n    /* OLD\r\n    let newState = content;\r\n    const movedContent = content.find((c) => c.id.toString() === draggableId);\r\n\r\n    newState.splice(source.index, 1);\r\n    newState.splice(destination.index, 0, movedContent);\r\n    setContent(newState);*/\r\n  };\r\n\r\n  const onSaveSurvey = () => {\r\n    const changeImages = (json) => {\r\n      json.pages.forEach((page) => {\r\n        page.contents.forEach((cont) => {\r\n          if (cont.type === content_type.QUESTION) {\r\n            if (\r\n              cont.data.images &&\r\n              Array.isArray(cont.data.images) &&\r\n              cont.data.images.length !== 0\r\n            ) {\r\n              cont.data.images.map((img) => {\r\n                return img.name;\r\n              });\r\n            }\r\n          }\r\n          if (cont.type === content_type.IMAGE) {\r\n            if (!cont.data.randomStatus || cont.data.randomStatus === false) {\r\n              cont.data.img = cont.data.img.name;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      // Restoring sections to their initial state\r\n      setSections(initialData);\r\n      return json;\r\n    };\r\n\r\n    /*  TODO: save survey data */\r\n    console.log(\"The content is\");\r\n    console.log(sections);\r\n    let finalJSON = {\r\n      title: surveyData.title,\r\n      description: surveyData.description,\r\n      pages: sections,\r\n    };\r\n    console.log(finalJSON);\r\n    if (props.json) finalJSON.id = props.json.id;\r\n    props.addSurvey(changeImages(finalJSON));\r\n    props.setPage(pages.MAIN);\r\n  };\r\n\r\n  const onChangeSurveyTitle = (e) => {\r\n    setSurveyData({ ...surveyData, title: e.target.value });\r\n  };\r\n\r\n  const onChangeSurveyDescription = (e) => {\r\n    setSurveyData({ ...surveyData, description: e.target.value });\r\n  };\r\n\r\n  const increaseSectionCounter = () => {\r\n    const newSectionId = sectionIdCounter;\r\n    setSectionIdCounter(newSectionId + 1);\r\n    return newSectionId;\r\n  };\r\n\r\n  const increaseContentCounter = () => {\r\n    const newContentId = contentIdCounter;\r\n    setContentIdCounter(newContentId + 1);\r\n    return newContentId;\r\n  };\r\n\r\n  const updateRandomNumbers = (propsBool) => {\r\n    let newRandomNumbers = [];\r\n    const tempSections =\r\n      propsBool && propsBool === true ? props.json.pages : sections;\r\n    tempSections.forEach((sec) => {\r\n      let phs = [];\r\n      sec.contents.forEach((c, cix) => {\r\n        if (c.type === content_type.RANDOM_NUMBER)\r\n          phs.push({ index: cix, name: c.data.name });\r\n      });\r\n      newRandomNumbers.push({ pageId: sec.pageId, placeholders: phs });\r\n    });\r\n    setRandomNumbers(newRandomNumbers);\r\n  };\r\n\r\n  const renderSections = () => {\r\n    return sections.map((section, sectionIndex) => {\r\n      const addContent = (newContent) => {\r\n        let newSections = [...sections];\r\n        newSections[sectionIndex].contents = [\r\n          ...newSections[sectionIndex].contents,\r\n          newContent,\r\n        ];\r\n        setSections(newSections);\r\n      };\r\n\r\n      const onAddQuestion = () => {\r\n        const newContentId = increaseContentCounter();\r\n        const newQuestion = {\r\n          contentId: newContentId,\r\n          type: content_type.QUESTION,\r\n          data: {},\r\n        };\r\n        addContent(newQuestion);\r\n      };\r\n\r\n      const onAddImage = () => {\r\n        const newContentId = increaseContentCounter();\r\n        const newImage = {\r\n          contentId: newContentId,\r\n          type: content_type.IMAGE,\r\n          data: {},\r\n        };\r\n        addContent(newImage);\r\n      };\r\n\r\n      const onAddTextField = () => {\r\n        const newContentId = increaseContentCounter();\r\n        const newTextField = {\r\n          contentId: newContentId,\r\n          type: content_type.TEXT,\r\n          data: {},\r\n        };\r\n        addContent(newTextField);\r\n      };\r\n\r\n      const onAddRandomNumber = () => {\r\n        const newContentId = increaseContentCounter();\r\n        const newRandomNumber = {\r\n          contentId: newContentId,\r\n          type: content_type.RANDOM_NUMBER,\r\n          data: {},\r\n        };\r\n        addContent(newRandomNumber);\r\n        updateRandomNumbers();\r\n      };\r\n\r\n      const onOpenEmbedVideoDialog = () => {\r\n        setOpenDialog(true);\r\n      };\r\n\r\n      const onCloseEmbedVideoDialog = () => {\r\n        setOpenDialog(false);\r\n      };\r\n\r\n      const onAddVideo = (url) => {\r\n        const newContentId = increaseContentCounter();\r\n        const newVideo = {\r\n          contentId: newContentId,\r\n          type: content_type.VIDEO,\r\n          data: { url: url },\r\n        };\r\n        addContent(newVideo);\r\n      };\r\n\r\n      const onAddSection = () => {\r\n        const newContentId = increaseContentCounter();\r\n\r\n        const newSectionId = increaseSectionCounter();\r\n\r\n        const newSection = {\r\n          pageId: newSectionId,\r\n          contents: [\r\n            {\r\n              contentId: newContentId,\r\n              type: content_type.QUESTION,\r\n              data: {\r\n                title: \"\",\r\n              },\r\n            },\r\n          ],\r\n        };\r\n        let newSections = [...sections];\r\n        /*let counter = section.id + 1;\r\n        for (let s of newSections) {\r\n          if (s.id >= section.id) {\r\n            s.id = counter;\r\n            counter++;\r\n          }\r\n        }*/\r\n        newSections.splice(sectionIndex, 0, newSection);\r\n        console.log(\"Added a new section, the sections now are: \", newSections);\r\n        setSections(newSections);\r\n      };\r\n\r\n      const onRemoveSection = () => {\r\n        let newSections = sections.filter((s, i) => i !== sectionIndex);\r\n        /*let counter = section.id;\r\n        for (let s of newSections) {\r\n          if (s.id > section.id) {\r\n            s.id = counter;\r\n            counter++;\r\n          }\r\n        }*/\r\n        console.log(\"The new sectins are\", newSections);\r\n        setSections(newSections);\r\n        updateRandomNumbers();\r\n      };\r\n\r\n      const renderContent = (pageContent) => {\r\n        /* TODO: consider move video parsing into a specific component */\r\n        const parseVideoID = (url) => {\r\n          const regexResult = url.match(/^[\\s\\S]*watch\\?v=([\\s\\S]*)[\\s\\S]*$/);\r\n          const separatorIndex = regexResult[1].indexOf(\"&\");\r\n          if (separatorIndex !== -1)\r\n            return regexResult[1].substring(0, separatorIndex);\r\n          return regexResult[1];\r\n        };\r\n\r\n        const getVideoThumbnail = (videoID) => {\r\n          return `http://img.youtube.com/vi/${videoID}/0.jpg`;\r\n        };\r\n\r\n        return pageContent.map((cont, contentIndex) => {\r\n          const removeContent = () => {\r\n            if (sections.length === 1 && section.contents.length === 1) {\r\n              alert(\"You must have at least one content in your survey!\");\r\n              return;\r\n            }\r\n            let newContent = section.contents.filter(\r\n              (item, itemIndex) => contentIndex !== itemIndex\r\n            );\r\n            if (newContent.length !== 0) {\r\n              /*let counter = 1;\r\n              for (let c of newContent) {\r\n                c.id = counter;\r\n                counter++;\r\n              }*/\r\n              let newSections = [...sections];\r\n              newSections[sectionIndex].contents = newContent;\r\n              setSections(newSections);\r\n            } else {\r\n              onRemoveSection();\r\n            }\r\n            updateRandomNumbers();\r\n          };\r\n\r\n          const updateContent = (updates) => {\r\n            let newContent = { ...cont };\r\n            newContent.data = { ...cont.data, ...updates };\r\n            // console.log(\"The new content is now: \", newContent);\r\n            let newSections = [...sections];\r\n            newSections[sectionIndex].contents[contentIndex] = newContent;\r\n            // Use a promise to make the state updates not batch together\r\n            Promise.resolve().then(() => {\r\n              setSections(newSections);\r\n              updateRandomNumbers();\r\n            });\r\n          };\r\n\r\n          const moveContentUp = () => {\r\n            if (contentIndex === 0) {\r\n              if (sectionIndex !== 0) {\r\n                // Move to the section before the current one\r\n                let destContent = sections[sectionIndex - 1].contents;\r\n                //cont.id = destContent.length + 1;\r\n                destContent = [...destContent, cont];\r\n                section.contents.splice(contentIndex, 1);\r\n                let newSections = [...sections];\r\n                newSections[sectionIndex].contents = section.contents;\r\n                newSections[sectionIndex - 1].contents = destContent;\r\n                setSections(newSections);\r\n                updateRandomNumbers();\r\n                if (section.contents.length === 0) onRemoveSection();\r\n              }\r\n            } else {\r\n              // Move up on the same section\r\n              let newContent = [...sections[sectionIndex].contents];\r\n              newContent.splice(contentIndex, 1);\r\n              newContent.splice(contentIndex - 1, 0, cont);\r\n              let newSections = [...sections];\r\n              newSections[sectionIndex].contents = newContent;\r\n              setSections(newSections);\r\n              updateRandomNumbers();\r\n            }\r\n          };\r\n\r\n          const moveContentDown = () => {\r\n            if (contentIndex === section.contents.length - 1) {\r\n              if (sectionIndex !== sections.length - 1) {\r\n                // Move to the section after the current one\r\n                let destContent = sections[sectionIndex + 1].contents;\r\n                destContent = [cont, ...destContent];\r\n                section.contents.splice(contentIndex, 1);\r\n                let newSections = [...sections];\r\n                newSections[sectionIndex].contents = section.contents;\r\n                newSections[sectionIndex + 1].contents = destContent;\r\n                setSections(newSections);\r\n                updateRandomNumbers();\r\n                if (section.contents.length === 0) onRemoveSection();\r\n              }\r\n            } else {\r\n              // Move down on the same section\r\n              let newContent = [...sections[sectionIndex].contents];\r\n              newContent.splice(contentIndex, 1);\r\n              newContent.splice(contentIndex + 1, 0, cont);\r\n              let newSections = [...sections];\r\n              newSections[sectionIndex].contents = newContent;\r\n              setSections(newSections);\r\n              updateRandomNumbers();\r\n            }\r\n          };\r\n\r\n          const previousPlaceholders = () => {\r\n            let previousPhArray = [];\r\n            randomNumbers.forEach((sec, secIx) => {\r\n              if (secIx < sectionIndex) {\r\n                sec.placeholders.forEach((ph) => previousPhArray.push(ph.name));\r\n              }\r\n              if (secIx === sectionIndex) {\r\n                sec.placeholders.forEach((ph) => {\r\n                  if (ph.index < contentIndex) {\r\n                    previousPhArray.push(ph.name);\r\n                  }\r\n                });\r\n              }\r\n            });\r\n            return previousPhArray;\r\n          };\r\n\r\n          const move = { up: moveContentUp, down: moveContentDown };\r\n\r\n          switch (cont.type) {\r\n            case content_type.QUESTION:\r\n              return (\r\n                <NewQuestion\r\n                  key={cont.contentId}\r\n                  content={cont.data}\r\n                  id={cont.contentId}\r\n                  index={contentIndex}\r\n                  section={sectionIndex}\r\n                  removeQuestion={removeContent}\r\n                  move={move}\r\n                  update={updateContent}\r\n                />\r\n              );\r\n            case content_type.IMAGE:\r\n              return (\r\n                <NewImage\r\n                  key={cont.contentId}\r\n                  id={cont.contentId}\r\n                  index={contentIndex}\r\n                  image={cont.data.img}\r\n                  data={cont.data}\r\n                  removeImage={removeContent}\r\n                  move={move}\r\n                  update={updateContent}\r\n                  randomNumbers={previousPlaceholders()}\r\n                />\r\n              );\r\n            case content_type.VIDEO:\r\n              /* NOTE: there's no meaning in showing the embedded video in\r\n                 the survey editor, therefore we get the video thumbnail and\r\n                 show that as an image. */\r\n              const thumbnail = getVideoThumbnail(parseVideoID(cont.data.url));\r\n              return (\r\n                <NewImage\r\n                  key={cont.contentId}\r\n                  id={cont.contentId}\r\n                  index={contentIndex}\r\n                  url={thumbnail}\r\n                  videoUrl={cont.data.url}\r\n                  removeImage={removeContent}\r\n                  move={move}\r\n                  update={updateContent}\r\n                />\r\n              );\r\n            case content_type.TEXT:\r\n              return (\r\n                <NewTextField\r\n                  key={cont.contentId}\r\n                  id={cont.contentId}\r\n                  index={contentIndex}\r\n                  removeTextField={removeContent}\r\n                  move={move}\r\n                  update={updateContent}\r\n                />\r\n              );\r\n            case content_type.RANDOM_NUMBER:\r\n              return (\r\n                <NewRandomNumber\r\n                  key={cont.contentId}\r\n                  id={cont.contentId}\r\n                  data={cont.data}\r\n                  index={contentIndex}\r\n                  removeRandomNumber={removeContent}\r\n                  move={move}\r\n                  update={updateContent}\r\n                />\r\n              );\r\n          }\r\n        });\r\n      };\r\n\r\n      // const sectionPlaceholders = randomNumbers[sectionIndex].placeholders;\r\n\r\n      return (\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          id={\"droppablegridcontainer-\" + section.pageId}\r\n          className={\r\n            sections.length === 1\r\n              ? classes.questionsContainerGridHidden\r\n              : classes.questionsContainerGrid\r\n          }\r\n        >\r\n          {sections.length === 1 ? (\r\n            <Fragment />\r\n          ) : (\r\n            <Box className={classes.sectionNameContainer}>\r\n              <Typography variant=\"h6\">\r\n                {\"Section \" + (sectionIndex + 1)}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          {renderContent(section.contents)}\r\n          <Box\r\n            component=\"span\"\r\n            id={\"managesurveybox-\" + section.pageId}\r\n            className={\r\n              sections.length === 1\r\n                ? classes.manageSurveyBox\r\n                : classes.manageSurveyBoxSection\r\n            }\r\n          >\r\n            <Tooltip title=\"Add question\">\r\n              <IconButton\r\n                className={classes.manageSurveyBoxIcon}\r\n                onClick={() => {\r\n                  onAddQuestion();\r\n                }}\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Insert image\">\r\n              {/* OLD <ImageInputBtn changeImage={onAddImage} />*/}\r\n              <IconButton\r\n                className={classes.manageSurveyBoxIcon}\r\n                onClick={() => {\r\n                  onAddImage();\r\n                }}\r\n              >\r\n                <InsertPhotoIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {/* ADD LATER\r\n            <Tooltip title=\"Embed video\">\r\n              <IconButton\r\n                className={classes.manageSurveyBoxIcon}\r\n                onClick={onOpenEmbedVideoDialog}\r\n              >\r\n                <VideoCallIcon />\r\n              </IconButton>\r\n            </Tooltip>*/}\r\n            <Tooltip title=\"Add text field\">\r\n              <IconButton\r\n                className={classes.manageSurveyBoxIcon}\r\n                onClick={onAddTextField}\r\n              >\r\n                <TextFieldsIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Add random number\">\r\n              <IconButton\r\n                className={classes.manageSurveyBoxIcon}\r\n                onClick={onAddRandomNumber}\r\n              >\r\n                <BookmarkIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Add section\">\r\n              <IconButton\r\n                className={classes.manageSurveyBoxIcon}\r\n                onClick={onAddSection}\r\n              >\r\n                <PostAddIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {sections.length !== 1 ? (\r\n              <Tooltip title=\"Remove section\">\r\n                <IconButton\r\n                  className={classes.manageSurveyBoxIcon}\r\n                  onClick={onRemoveSection}\r\n                >\r\n                  <DeleteSweepIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : (\r\n              <Fragment />\r\n            )}\r\n          </Box>\r\n          {openDialog === true ? (\r\n            <EmbedVideoDialog\r\n              open={openDialog}\r\n              handleClose={onCloseEmbedVideoDialog}\r\n              handleSubmit={onAddVideo}\r\n            />\r\n          ) : (\r\n            <Fragment />\r\n          )}\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      id=\"newsurveycontainer\"\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={classes.surveyGrid}\r\n    >\r\n      <Box width=\"60%\" className={classes.surveyForm} id=\"firstboxcontainer\">\r\n        <Box width=\"100%\">\r\n          <form style={{ width: \"100%\" }}>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              id=\"secondgridcontainer\"\r\n            >\r\n              <Box width=\"70%\" className={classes.titleInputBox}>\r\n                <Input\r\n                  placeholder=\"Your survey title\"\r\n                  inputProps={{ \"aria-label\": \"description\" }}\r\n                  className={classes.titleInput}\r\n                  fullWidth\r\n                  value={surveyData.title}\r\n                  onChange={onChangeSurveyTitle}\r\n                />\r\n              </Box>\r\n              <Box width=\"50%\" className={classes.titleInputBox}>\r\n                <Input\r\n                  placeholder=\"Your survey description\"\r\n                  inputProps={{ \"aria-label\": \"description\" }}\r\n                  className={classes.descInput}\r\n                  fullWidth\r\n                  value={surveyData.description}\r\n                  onChange={onChangeSurveyDescription}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            {renderSections()}\r\n          </form>\r\n          <Grid item className={classes.bottomButtonsContainer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.bottomButton}\r\n              onClick={() => {\r\n                props.setPage(pages.MAIN);\r\n              }}\r\n            >\r\n              Back to home page\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.bottomButton}\r\n              onClick={() => {\r\n                onSaveSurvey();\r\n              }}\r\n            >\r\n              Save survey\r\n            </Button>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      {/*{openDialog === true ? (\r\n        <EmbedVideoDialog\r\n          open={openDialog}\r\n          handleClose={onCloseEmbedVideoDialog}\r\n          handleSubmit={onAddVideo}\r\n        />\r\n      ) : (\r\n        <Fragment />\r\n      )}*/}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction EmbedVideoDialog(props) {\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUrl(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Embed video</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          To embed a YouTube video into the survey, please insert its URL.\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"embedvideourlfield\"\r\n          label=\"URL\"\r\n          type=\"url\"\r\n          fullWidth\r\n          onChange={handleChange}\r\n          value={url}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.handleClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            props.handleSubmit(url);\r\n            props.handleClose();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Embed\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default NewSurvey;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\View.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\JsonLoader.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\viewStyles.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\ImageInputBtn.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewQuestion.js",["313","314","315","316"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport QuestionTypes from \"../questionTypes\";\r\n// Material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\n// Icons\r\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport LinearScaleIcon from \"@material-ui/icons/LinearScale\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\n// DragAndDrop\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n//Style\r\nimport { newQuestionStyle } from \"../../editorStyles\";\r\nimport ImageInputBtn from \"./ImageInputBtn\";\r\nimport questionTypes from \"../questionTypes\";\r\nimport MultipleChoiceQuestion from \"./MultipleChoiceQuestion\";\r\nimport LinearScaleQuestion from \"./LinearScaleQuestion\";\r\nconst useStyles = newQuestionStyle;\r\n\r\nconst initialData = {\r\n  choices: [\r\n    { id: 1, value: \"\" },\r\n    { id: 2, value: \"\" },\r\n  ],\r\n  minValue: 1,\r\n  maxValue: 5,\r\n  minValueLabel: \"\",\r\n  maxValueLabel: \"\",\r\n};\r\n\r\nfunction NewQuestion(props) {\r\n  const classes = useStyles();\r\n  const [mandatory, setMandatory] = useState(false);\r\n\r\n  // TODO: use props to get values for the state\r\n  const [question, setQuestion] = useState({\r\n    title: props.content && props.content.title ? props.content.title : \"\",\r\n    type:\r\n      props.content && props.content.type && props.content.type !== \"QUESTION\"\r\n        ? props.content.type\r\n        : QuestionTypes.SHORT_TEXT,\r\n    description: props.content.description ? props.content.description : \"\",\r\n    choices: props.content.choices\r\n      ? props.content.choices\r\n      : [\r\n          { id: 1, value: \"\" },\r\n          { id: 2, value: \"\" },\r\n        ],\r\n    minValue: props.content.minValue ? props.content.minValue : 1,\r\n    maxValue: props.content.maxValue ? props.content.maxValue : 5,\r\n    minValueLabel: props.content.minValueLabel\r\n      ? props.content.minValueLabel\r\n      : \"\",\r\n    maxValueLabel: props.content.maxValueLabel\r\n      ? props.content.maxValueLabel\r\n      : \"\",\r\n  });\r\n  const [images, setImages] = useState([]);\r\n  const [desc, setDesc] = useState({\r\n    descText: \"\",\r\n    descStatus: false,\r\n  });\r\n\r\n  const updateQuestion = props.update;\r\n\r\n  /* Used to send the title, the type and the mandatory value to the parent */\r\n  useEffect(() => {\r\n    updateQuestion({\r\n      title: question.title,\r\n      type: question.type,\r\n      isMandatory: mandatory,\r\n    });\r\n  }, []);\r\n\r\n  const handleMandatory = () => {\r\n    setMandatory(!mandatory);\r\n    props.update({ isMandatory: !mandatory });\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    setQuestion({ ...question, title: e.target.value });\r\n    props.update({ title: e.target.value });\r\n  };\r\n\r\n  const onChangeType = (e) => {\r\n    setQuestion({ ...question, type: e.target.value });\r\n    // TODO reset initial data\r\n    props.update({ type: e.target.value });\r\n  };\r\n\r\n  const onToggleDescription = () => {\r\n    setDesc({ ...desc, descStatus: !desc.descStatus });\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setQuestion({ ...question, description: e.target.value });\r\n    props.update({ description: e.target.value });\r\n  };\r\n\r\n  const renderSelectValue = (value) => {\r\n    return (\r\n      <ListItemText\r\n        primary={value}\r\n        className={classes.questionTypeRenderValue}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderDescription = () => {\r\n    if (!desc.descStatus) return;\r\n    return (\r\n      <Input\r\n        placeholder=\"Question description\"\r\n        inputProps={{ \"aria-label\": \"description\" }}\r\n        className={classes.questionDescription}\r\n        value={question.description}\r\n        onChange={onChangeDescription}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderImages = () => {\r\n    const onRemoveImg = (index) => {\r\n      let newImages = [...images];\r\n      newImages = newImages.filter((el, ix) => ix !== index);\r\n      setImages(newImages);\r\n      props.update({ images: newImages });\r\n    };\r\n\r\n    if (!Array.isArray(images)) {\r\n      return;\r\n    }\r\n    return (\r\n      <div>\r\n        {images.map((image, index) => (\r\n          <div className={classes.imgContainer}>\r\n            <img\r\n              src={URL.createObjectURL(image)}\r\n              alt={\"image-\" + index}\r\n              key={index}\r\n              className={classes.imgContent}\r\n            />\r\n            <Button\r\n              className={classes.removeImgBtn}\r\n              onClick={() => {\r\n                onRemoveImg(index);\r\n              }}\r\n            >\r\n              Remove image\r\n            </Button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onRemoveQuestion = () => {\r\n    props.removeQuestion(props.index);\r\n  };\r\n\r\n  const onAddImage = (img) => {\r\n    console.log(\"Adding image\");\r\n    const newImages = [...images, img];\r\n    setImages(newImages);\r\n    props.update({ images: newImages });\r\n    // forceUpdate();\r\n  };\r\n\r\n  const onUpdateChoices = (choices) => {\r\n    setQuestion({ ...question, choices: choices });\r\n    props.update({ choices: choices });\r\n  };\r\n\r\n  const onUpdateMinLinearValue = (value) => {\r\n    setQuestion({ ...question, minValue: value });\r\n    props.update({ minValue: value });\r\n  };\r\n\r\n  const onUpdateMaxLinearValue = (value) => {\r\n    setQuestion({ ...question, maxValue: value });\r\n    props.update({ maxValue: value });\r\n  };\r\n\r\n  const onUpdateMinLinearLabel = (label) => {\r\n    setQuestion({ ...question, minValueLabel: label });\r\n    props.update({ minValueLabel: label });\r\n  };\r\n\r\n  const onUpdateMaxLinearLabel = (label) => {\r\n    setQuestion({ ...question, maxValueLabel: label });\r\n    props.update({ maxValueLabel: label });\r\n  };\r\n\r\n  const renderQuestion = () => {\r\n    switch (question.type) {\r\n      case questionTypes.MULTIPLE_CHOICE:\r\n        return (\r\n          <MultipleChoiceQuestion\r\n            update={onUpdateChoices}\r\n            choices={question.choices}\r\n          />\r\n        );\r\n      case questionTypes.LINEAR_SCALE:\r\n        const updateAll = (updates) => {\r\n          props.update(updates);\r\n        };\r\n\r\n        /*props.update({\r\n          minValue: question.minValue,\r\n          maxValue: question.maxValue,\r\n          minValueLabel: question.minValueLabel,\r\n          maxValueLabel: question.maxValueLabel,\r\n        });*/\r\n        return (\r\n          <LinearScaleQuestion\r\n            minValue={question.minValue}\r\n            maxValue={question.maxValue}\r\n            minValueLabel={question.minValueLabel}\r\n            maxValueLabel={question.maxValueLabel}\r\n            updateMinValue={onUpdateMinLinearValue}\r\n            updateMaxValue={onUpdateMaxLinearValue}\r\n            updateMinValueLabel={onUpdateMinLinearLabel}\r\n            updateMaxValueLabel={onUpdateMaxLinearLabel}\r\n            updateAll={updateAll}\r\n          />\r\n        );\r\n      case questionTypes.RANKING:\r\n        return (\r\n          <MultipleChoiceQuestion\r\n            update={onUpdateChoices}\r\n            choices={question.choices}\r\n          />\r\n        );\r\n      default:\r\n        return <Fragment />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder=\"Question title\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.questionTitle}\r\n            onChange={onChangeTitle}\r\n            value={question.title}\r\n          />\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={question.type}\r\n            renderValue={renderSelectValue}\r\n            className={classes.questionType}\r\n            onChange={onChangeType}\r\n          >\r\n            <MenuItem value={QuestionTypes.SHORT_TEXT}>\r\n              <ListItemIcon>\r\n                <ShortTextIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={QuestionTypes.SHORT_TEXT} />\r\n            </MenuItem>\r\n            <MenuItem value={QuestionTypes.PARAGRAPH}>\r\n              <ListItemIcon>\r\n                <SubjectIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={QuestionTypes.PARAGRAPH} />\r\n            </MenuItem>\r\n            <MenuItem value={QuestionTypes.MULTIPLE_CHOICE}>\r\n              <ListItemIcon>\r\n                <RadioButtonCheckedIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={QuestionTypes.MULTIPLE_CHOICE} />\r\n            </MenuItem>\r\n            <MenuItem value={QuestionTypes.CHECKBOX}>\r\n              <ListItemIcon>\r\n                <CheckBoxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={QuestionTypes.CHECKBOX} />\r\n            </MenuItem>\r\n            <MenuItem value={QuestionTypes.LINEAR_SCALE}>\r\n              <ListItemIcon>\r\n                <LinearScaleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={QuestionTypes.LINEAR_SCALE} />\r\n            </MenuItem>\r\n            <MenuItem value={QuestionTypes.RANKING}>\r\n              <ListItemIcon>\r\n                <ImportExportIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={QuestionTypes.RANKING} />\r\n            </MenuItem>\r\n          </Select>\r\n          {renderDescription()}\r\n          {renderImages()}\r\n          {renderQuestion()}\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.id + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={mandatory}\r\n                  onChange={handleMandatory}\r\n                  name=\"checkedA\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Mandatory\"\r\n              labelPlacement=\"start\"\r\n            />\r\n            <Divider\r\n              orientation=\"vertical\"\r\n              flexItem\r\n              className={classes.cardActionsDivider}\r\n            />\r\n            <Tooltip\r\n              title={(desc.descStatus ? \"Hide\" : \"Show\") + \" description\"}\r\n              placement=\"bottom\"\r\n            >\r\n              <IconButton\r\n                onClick={() => {\r\n                  onToggleDescription();\r\n                }}\r\n              >\r\n                <ShortTextIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Attach image\" placement=\"bottom\">\r\n              <ImageInputBtn changeImage={onAddImage} />\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveQuestion();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewQuestion;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewImage.js",["317","318","319","320","321","322","323","324","325","326","327","328"],"import React, { useState, useRef, Fragment, useEffect } from \"react\";\r\n// Material\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  Divider,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch,\r\n  Button,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n// Draggable\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n// Icons\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\n// Style\r\nimport { newImageStyle } from \"../../editorStyles\";\r\nimport QuestionTypes from \"../questionTypes\";\r\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport LinearScaleIcon from \"@material-ui/icons/LinearScale\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport RandomGallery from \"./RandomGallery\";\r\nimport content_type from \"../../contentTypes\";\r\nconst useStyles = newImageStyle;\r\n\r\nfunction NewImage(props) {\r\n  const classes = useStyles();\r\n  const fileInput = useRef(null);\r\n  const randomNumbersNames = props.randomNumbers;\r\n\r\n  const [title, setTitle] = useState(\r\n    props.data && props.data.title ? props.data.title : \"\"\r\n  );\r\n  const [img, setImg] = useState(\r\n    props.data && props.data.img ? props.data.img : undefined\r\n  );\r\n  const [randomize, setRandomize] = useState({\r\n    randomStatus:\r\n      props.data && props.data.randomStatus ? props.data.randomStatus : false,\r\n    randomName:\r\n      props.data && props.data.randomName ? props.data.randomName : \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"The random numbers in NewImage are: \", randomNumbersNames);\r\n  }, []);\r\n\r\n  const onRemoveContent = () => {\r\n    props.removeImage(props.index);\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n    props.update({ title: e.target.value });\r\n  };\r\n\r\n  const onClickSelectImg = () => {\r\n    fileInput.current.click();\r\n  };\r\n\r\n  const onChangeImage = (e) => {\r\n    const myImg = e.target.files[0];\r\n    setImg(myImg);\r\n    props.update({ img: myImg });\r\n  };\r\n\r\n  const onChangeRandomStatus = () => {\r\n    setRandomize({ ...randomize, randomStatus: !randomize.randomStatus });\r\n    props.update({ randomStatus: !randomize.randomStatus });\r\n  };\r\n\r\n  const onChangeRandomName = (e) => {\r\n    setRandomize({ ...randomize, randomName: e.target.value });\r\n    props.update({ randomName: e.target.value });\r\n  };\r\n\r\n  /* const checkImageType = () => {\r\n    if (props.url) {\r\n      return props.url;\r\n    } else if (props.image) {\r\n      return URL.createObjectURL(props.image);\r\n    } else {\r\n      console.log(props);\r\n      return props.url;\r\n    }\r\n  };*/\r\n\r\n  const renderRandomizeSelection = () => {\r\n    const checkValue = () => {\r\n      let check = false;\r\n      if (randomNumbersNames.length !== 0) {\r\n        randomNumbersNames.forEach((name) => {\r\n          if (randomize.randomName === name) check = true;\r\n        });\r\n      }\r\n      return check;\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        {randomNumbersNames.length !== 0 ? (\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={checkValue() === true ? randomize.randomName : \"\"}\r\n            className={classes.randomNameSelector}\r\n            onChange={onChangeRandomName}\r\n            defaultValue=\"\"\r\n          >\r\n            {randomNumbersNames.map((rn) => (\r\n              <MenuItem key={\"selectvalue\" + rn} value={rn}>\r\n                {rn}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        ) : null}\r\n        <RandomGallery randomType={content_type.IMAGE} />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderDefaultImage = () => {\r\n    return (\r\n      <Fragment>\r\n        {img !== undefined ? (\r\n          <img\r\n            //src={checkImageType()}\r\n            src={URL.createObjectURL(img)}\r\n            alt={\"img\" + props.id}\r\n            className={classes.imgContent}\r\n          />\r\n        ) : (\r\n          <Fragment />\r\n        )}\r\n        <div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.selectAndChangeImgBtn}\r\n            onClick={() => {\r\n              onClickSelectImg();\r\n            }}\r\n          >\r\n            {img === undefined ? \"Select\" : \"Change\"} image\r\n          </Button>\r\n          <input\r\n            style={{\r\n              display: \"none\",\r\n              top: \"0px\",\r\n              right: \"0px\",\r\n            }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            ref={fileInput}\r\n            onChange={onChangeImage}\r\n            onClick={(event) => {\r\n              // Used to let the user select the same file if needed\r\n              event.target.value = null;\r\n            }}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder={props.url ? \"Video title\" : \"Image title\"}\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.imageTitle}\r\n            value={title}\r\n            onChange={onChangeTitle}\r\n          />\r\n          {randomize.randomStatus\r\n            ? renderRandomizeSelection()\r\n            : renderDefaultImage()}\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            {props.randomNumbers.length !== 0 ? (\r\n              <Fragment>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      checked={randomize.randomStatus}\r\n                      onChange={onChangeRandomStatus}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Randomize\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <Divider\r\n                  orientation=\"vertical\"\r\n                  flexItem\r\n                  className={classes.cardActionsDivider}\r\n                />\r\n              </Fragment>\r\n            ) : null}\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveContent();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewImage;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewTextField.js",["329","330","331","332","333","334","335"],"import React, { Fragment, useState } from \"react\";\r\n// Material\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  Divider,\r\n  Tooltip,\r\n  FormControlLabel,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\n// Draggable\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n// Icons\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n// Style\r\nimport { newTextFieldStyle } from \"../../editorStyles\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\r\nimport ImageInputBtn from \"./ImageInputBtn\";\r\nconst useStyles = newTextFieldStyle;\r\n\r\nfunction NewTextField(props) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const onRemoveContent = () => {\r\n    props.removeTextField(props.index);\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    setState({ ...state, title: e.target.value });\r\n    props.update({ title: e.target.value });\r\n  };\r\n\r\n  const onChangeDescription = (e) => {\r\n    setState({ ...state, description: e.target.value });\r\n    props.update({ description: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder=\"Title\"\r\n            inputProps={{ \"aria-label\": \"title\" }}\r\n            className={classes.textTitle}\r\n            value={state.title}\r\n            onChange={onChangeTitle}\r\n          />\r\n          <Input\r\n            placeholder=\"Description\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.textDescription}\r\n            value={state.description}\r\n            onChange={onChangeDescription}\r\n          />\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveContent();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewTextField;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\NewRandomNumber.js",["336","337"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Input,\r\n  Divider,\r\n  CardActions,\r\n  Tooltip,\r\n  IconButton,\r\n  InputLabel,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { newRandomNumberStyle } from \"../../editorStyles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nconst useStyles = newRandomNumberStyle;\r\n\r\nfunction NewRandomNumber(props) {\r\n  const [name, setName] = useState(\r\n    props.data && props.data.name ? props.data.name : \"\"\r\n  );\r\n  const [minRange, setMinRange] = useState(\r\n    props.data && props.data.minRange ? props.data.minRange : 0\r\n  );\r\n  const [maxRange, setMaxRange] = useState(\r\n    props.data && props.data.maxRange ? props.data.maxRange : 100\r\n  );\r\n\r\n  useEffect(() => {\r\n    props.update({ name, minRange, maxRange });\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n    props.update({ name: e.target.value });\r\n  };\r\n\r\n  const onChangeMinRange = (e) => {\r\n    setMinRange(e.target.value);\r\n    props.update({ minRange: e.target.value });\r\n  };\r\n\r\n  const onChangeMaxRange = (e) => {\r\n    setMaxRange(e.target.value);\r\n    props.update({ maxRange: e.target.value });\r\n  };\r\n\r\n  const onRemoveContent = () => {\r\n    props.removeRandomNumber(props.index);\r\n  };\r\n\r\n  return (\r\n    <Box width={800} className={classes.boxCardRoot}>\r\n      <Card className={classes.cardRoot} variant=\"outlined\">\r\n        <CardContent className={classes.cardContent}>\r\n          <Input\r\n            placeholder=\"Name for your random number\"\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            className={classes.placeholderTitle}\r\n            value={name}\r\n            onChange={onChangeName}\r\n          />\r\n          <Typography variant=\"body1\" className={classes.rangeText}>\r\n            Insert the values for the random generation range\r\n          </Typography>\r\n          <FormControl className={classes.rangeInput}>\r\n            <InputLabel>Minimum range value</InputLabel>\r\n            <Input type=\"number\" value={minRange} onChange={onChangeMinRange} />\r\n          </FormControl>\r\n          <FormControl className={classes.rangeInput}>\r\n            <InputLabel>Maximum range value</InputLabel>\r\n            <Input type=\"number\" value={maxRange} onChange={onChangeMaxRange} />\r\n          </FormControl>\r\n        </CardContent>\r\n        <Divider variant=\"middle\" />\r\n        <CardActions className={classes.cardActions}>\r\n          <div\r\n            id={\"left-side-actions\" + props.index}\r\n            className={classes.cardActionsLeft}\r\n          >\r\n            <Tooltip title=\"Move up\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.up();\r\n                }}\r\n              >\r\n                <ArrowUpward />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Move down\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  props.move.down();\r\n                }}\r\n              >\r\n                <ArrowDownward />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n          <div className={classes.cardActionsRight}>\r\n            <Tooltip title=\"Delete question\" placement=\"bottom\">\r\n              <IconButton\r\n                onClick={() => {\r\n                  onRemoveContent();\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NewRandomNumber;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\PlaceholdersContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\contentTypes.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\surveys\\Survey.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\RandomGallery.js",["338","339"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport content_type from \"../../contentTypes\";\r\nimport { randomGalleryStyle } from \"../../editorStyles\";\r\nconst useStyles = randomGalleryStyle;\r\n\r\nfunction RandomGallery(props) {\r\n  const [content, setContent] = useState(undefined);\r\n  const [contentIndex, setContentIndex] = useState(0);\r\n  const [contentList, setContentList] = useState([]);\r\n  const randomType = props.randomType;\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (content === undefined) {\r\n      getFirstContent();\r\n    }\r\n  }, []);\r\n\r\n  const getFirstContent = () => {\r\n    // TODO generalize for any type of content\r\n    let imageList;\r\n    fetch(\"http://localhost:9000/getImageList\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setContentList(data);\r\n        imageList = data;\r\n      })\r\n      .then(() => {\r\n        let url = new URL(\"http://localhost:9000/getImage\");\r\n        url.search = new URLSearchParams({\r\n          imageName: imageList[\"Question Images\"][0],\r\n          folder: \"question\",\r\n        });\r\n        fetch(url)\r\n          .then((response) => response.blob())\r\n          .then((data) => setContent(data));\r\n      });\r\n  };\r\n\r\n  const getPreviousContent = () => {\r\n    let newIndex;\r\n    if (contentIndex !== 0) {\r\n      console.log(\"Content index is not zero\");\r\n      newIndex = contentIndex - 1;\r\n      setContentIndex(contentIndex - 1);\r\n    } else {\r\n      console.log(\"Content index is zero\");\r\n      newIndex = contentList[\"Question Images\"].length - 1;\r\n      setContentIndex(contentList[\"Question Images\"].length - 1);\r\n    }\r\n    console.log(\"The new index is\", newIndex);\r\n    console.log(\"The list is: \", contentList);\r\n    console.log(\r\n      \"The value at the list is :\",\r\n      contentList[\"Question Images\"][newIndex]\r\n    );\r\n    let url = new URL(\"http://localhost:9000/getImage\");\r\n    url.search = new URLSearchParams({\r\n      imageName: contentList[\"Question Images\"][newIndex],\r\n      folder: \"question\",\r\n    });\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((data) => setContent(data));\r\n  };\r\n\r\n  const getNextContent = () => {\r\n    let newIndex;\r\n    if (contentIndex !== contentList[\"Question Images\"].length - 1) {\r\n      newIndex = contentIndex + 1;\r\n      setContentIndex(contentIndex + 1);\r\n    } else {\r\n      newIndex = 0;\r\n      setContentIndex(0);\r\n    }\r\n    let url = new URL(\"http://localhost:9000/getImage\");\r\n    url.search = new URLSearchParams({\r\n      imageName: contentList[\"Question Images\"][newIndex],\r\n      folder: \"question\",\r\n    });\r\n    fetch(url)\r\n      .then((response) => response.blob())\r\n      .then((data) => setContent(data));\r\n  };\r\n\r\n  const renderRandomComponent = () => {\r\n    switch (randomType) {\r\n      case content_type.IMAGE: {\r\n        return content !== undefined ? (\r\n          <img\r\n            src={URL.createObjectURL(content)}\r\n            alt=\"Random image\"\r\n            className={classes.imgContent}\r\n          />\r\n        ) : (\r\n          <Fragment />\r\n        );\r\n      }\r\n      default: {\r\n        return <Fragment />;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"body1\">Overview of your random component</Typography>\r\n      {renderRandomComponent()}\r\n      <Button onClick={getPreviousContent}>Previous Content</Button>\r\n      <Button onClick={getNextContent}>Next Content</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomGallery;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\LinearScaleQuestion.js",["340"],"import React, { useEffect } from \"react\";\r\nimport { linearScaleQuestionStyle } from \"../../editorStyles\";\r\nimport {\r\n  Typography,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nconst useStyles = linearScaleQuestionStyle;\r\n\r\nfunction LinearScaleQuestion(props) {\r\n  const classes = useStyles();\r\n  let minValue = props.minValue;\r\n  let maxValue = props.maxValue;\r\n  let minValueLabel = props.minValueLabel;\r\n  let maxValueLabel = props.maxValueLabel;\r\n\r\n  useEffect(() => {\r\n    props.updateAll({ minValue, maxValue, minValueLabel, maxValueLabel });\r\n  }, []);\r\n\r\n  const onChangeMinValue = (e) => {\r\n    props.updateMinValue(e.target.value);\r\n  };\r\n\r\n  const onChangeMaxValue = (e) => {\r\n    props.updateMaxValue(e.target.value);\r\n  };\r\n\r\n  const onChangeMinValueLabel = (e) => {\r\n    props.updateMinValueLabel(e.target.value);\r\n  };\r\n\r\n  const onChangeMaxValueLabel = (e) => {\r\n    props.updateMaxValueLabel(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.fieldContainer}>\r\n      <Box component=\"div\" className={classes.rangeSelectContainer}>\r\n        <Typography variant=\"body1\" className={classes.rangeSelectItem}>\r\n          Da{\" \"}\r\n        </Typography>\r\n        <FormControl className={classes.rangeSelectItem}>\r\n          <Select value={minValue} onChange={onChangeMinValue}>\r\n            <MenuItem value={0}>0</MenuItem>\r\n            <MenuItem value={1}>1</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <Typography variant=\"body1\" className={classes.rangeSelectItem}>\r\n          {\" \"}\r\n          a{\" \"}\r\n        </Typography>\r\n        <FormControl className={classes.rangeSelectItem}>\r\n          <Select value={maxValue} onChange={onChangeMaxValue}>\r\n            <MenuItem value={2}>2</MenuItem>\r\n            <MenuItem value={3}>3</MenuItem>\r\n            <MenuItem value={4}>4</MenuItem>\r\n            <MenuItem value={5}>5</MenuItem>\r\n            <MenuItem value={6}>6</MenuItem>\r\n            <MenuItem value={7}>7</MenuItem>\r\n            <MenuItem value={8}>8</MenuItem>\r\n            <MenuItem value={9}>9</MenuItem>\r\n            <MenuItem value={10}>10</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n      <Box component=\"div\">\r\n        <FormControl className={classes.labelChangeContainer}>\r\n          <TextField\r\n            label={\"Minimum value label\"}\r\n            value={minValueLabel}\r\n            className={classes.textField && classes.labelChangeItem}\r\n            onChange={onChangeMinValueLabel}\r\n          />\r\n          <TextField\r\n            label={\"Maximum value label\"}\r\n            value={maxValueLabel}\r\n            className={classes.textField && classes.labelChangeItem}\r\n            onChange={onChangeMaxValueLabel}\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinearScaleQuestion;\r\n","C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\questionTypes.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\editor\\MultipleChoiceQuestion.js",["341"],"import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { multipleChoiceQuestionStyle } from \"../../editorStyles\";\r\nconst useStyles = multipleChoiceQuestionStyle;\r\n\r\nfunction MultipleChoiceQuestion(props) {\r\n  const classes = useStyles();\r\n  let choices = [...props.choices];\r\n\r\n  const onChangeValue = (e, index) => {\r\n    choices[index].value = e.target.value;\r\n    props.update(choices);\r\n  };\r\n\r\n  const onRemoveOption = (index) => {\r\n    choices = choices.filter((el, ix) => ix !== index);\r\n    props.update(choices);\r\n  };\r\n\r\n  const onAddOption = () => {\r\n    choices = [...choices, { id: choices.length + 1, value: \"\" }];\r\n    props.update(choices);\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    return props.choices.map((choice, index) => {\r\n      return (\r\n        <div key={\"choice-\" + choice.id}>\r\n          <TextField\r\n            label={\"Option \" + (index + 1)}\r\n            value={choice.value}\r\n            className={classes.textField}\r\n            onChange={(e) => {\r\n              onChangeValue(e, index);\r\n            }}\r\n          />\r\n          {index !== 0 && index !== 1 ? (\r\n            <Button\r\n              color=\"#FF0000\"\r\n              className={classes.removeOptionBtn}\r\n              onClick={() => {\r\n                onRemoveOption(index);\r\n              }}\r\n            >\r\n              Remove option\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.fieldContainer}>\r\n      {renderOptions()}\r\n      <Button\r\n        color=\"primary\"\r\n        className={classes.addOptionBtn}\r\n        onClick={() => {\r\n          onAddOption();\r\n        }}\r\n      >\r\n        Add option\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultipleChoiceQuestion;\r\n",["342","343"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\index.js",[],["344","345"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\App.js",["346","347","348"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\SelectedSurveyContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\tmpSurveys.js",["349","350"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\editorStyles.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\pages.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NavBar.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\MainPage.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewSurvey.js",["351","352","353","354","355","356","357","358","359"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\View.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\JsonLoader.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\viewStyles.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\ImageInputBtn.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewQuestion.js",["389","390","391","392"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewImage.js",["393","394","395","396","397","398","399","400","401","402","403","404"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewRandomNumber.js",["405","406"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\PlaceholdersContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\NewTextField.js",["407","408","409","410","411","412","413"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\contentTypes.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\surveys\\Survey.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\LinearScaleQuestion.js",["414"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\RandomGallery.js",["415","416"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\questionTypes.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\editor\\MultipleChoiceQuestion.js",["417"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\Page.js",["418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\TextQuestion.js",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\n// Importing Material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  Menu,\r\n  Select,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Droppable, Draggable, DragDropContext } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport SelectedSurveyContext from \"../../SelectedSurveyContext\";\r\nconst useStyles = questionStyle;\r\n\r\nfunction TextQuestion(props){\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Typography component={\"span\"} color=\"textPrimary\" align=\"center\">\r\n        <Grid>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            width={400}\r\n            component=\"div\"\r\n            className={classes.wrapper}\r\n          >\r\n            <Box align=\"left\" className={classes.titleContainer}>\r\n              {props.data.title}\r\n            </Box>\r\n            <Box align=\"left\" className={classes.elementContainer}>\r\n              {props.data.description}\r\n            </Box>\r\n\r\n            <form autoComplete=\"off\">\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"standard-textarea\"\r\n                label=\"Type here your answer\"\r\n                placeholder=\"Placeholder\"\r\n                multiline\r\n                rowsMax={3}\r\n              />\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default TextQuestion;","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\MultipleChoiceQuestion.js",["484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\n// Importing Material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  Menu,\r\n  Select,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Droppable, Draggable, DragDropContext } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport SelectedSurveyContext from \"../../SelectedSurveyContext\";\r\nconst useStyles = questionStyle;\r\n\r\n\r\n/*BUG: se in due domande diversele possibili risposte\r\ndei radio button sono uguali, allora quando si sceglie la risposta in una domanda, verrà in automatico\r\nselezionata anche nell'altra.*/\r\n\r\nfunction MultipleChoiceQuestion(props){\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n      <Typography component={\"span\"} color=\"textPrimary\" align=\"center\">\r\n        <Grid>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            width={400}\r\n            component=\"div\"\r\n            className={classes.wrapper}\r\n          >\r\n            <Box align=\"left\" className={classes.titleContainer}>\r\n              {props.data.title}\r\n            </Box>\r\n\r\n            <Grid className={classes.grid} container spacing={3}>\r\n              <Grid item>\r\n                {/*Se l'array non è vuoto, allora lo scorre*/}\r\n                {props.data.images && props.data.images.map((img) => (\r\n                  <Paper\r\n                    variant=\"outlined\"\r\n                    className={classes.imagePaperContainer}\r\n                    key={props.data}\r\n                  >\r\n                    {/*loadImage(img)*/}\r\n                  </Paper>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box align=\"left\" className={classes.elementContainer}>\r\n              {props.data.description}\r\n            </Box>\r\n\r\n            <RadioGroup name=\"RadioGroup\">\r\n              {props.data.choices.map((s) => (\r\n                <Box align=\"left\" className={classes.choicesContainer} key={s.value}>\r\n                  <FormControlLabel\r\n                    value={s.value}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label={s.value}\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </RadioGroup>\r\n          </Paper>\r\n        </Grid>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default MultipleChoiceQuestion;","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\RankingQuestion.js",["510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\n// Importing Material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  Menu,\r\n  Select,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Droppable, Draggable, DragDropContext } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport SelectedSurveyContext from \"../../SelectedSurveyContext\";\r\nimport TextQuestion from \"./TextQuestion.js\";\r\nimport MultipleChoiceQuestion from \"./MultipleChoiceQuestion.js\";\r\nconst useStyles = questionStyle;\r\n\r\nfunction RankingQuestion(props){\r\n\r\n  const classes = useStyles();\r\n  return (\r\n      <Typography component={\"span\"}>\r\n        <Grid>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            width={400}\r\n            component=\"div\"\r\n            className={classes.wrapper}\r\n          >\r\n            <div>\r\n              <Box align=\"left\" className={classes.titleContainer}>\r\n                {props.data.title}\r\n              </Box>\r\n\r\n              <Box align=\"left\" className={classes.elementContainer}>\r\n                {props.data.description}\r\n              </Box>\r\n\r\n              <DragDropContext\r\n                onDragEnd={(param) => {\r\n\r\n                  //Indici dei due elementi da scambiare\r\n                  const srcIndex = param.source.index;\r\n                  const destIndex = param.destination?.index;\r\n\r\n                  const newList = props.data.choices; //Copia dell'array di scelte da ordinare\r\n                  const [reorderList] = props.data.choices.splice(\r\n                    srcIndex,\r\n                    1\r\n                  ); //si rimuove l'indice sorgente dal nuovo array\r\n                  newList.splice(destIndex, 0, reorderList); //si riaggiunge l'indice nell'array nella nuova posizione\r\n                }}\r\n              >\r\n                <Droppable droppableId=\"1\">\r\n                  {(provided, _) => (\r\n                    <div\r\n                      className={classes.rankingContainer}\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                    >\r\n                      {props.data.choices.map((item, i) => (\r\n                        <Draggable\r\n                          key={item + i}\r\n                          index={i}\r\n                          draggableId={\"draggable-\" + item.id}\r\n                        >\r\n                          {(provided, snapshot) => (\r\n                            <Card\r\n                              className={classes.dragndropItem}\r\n                              ref={provided.innerRef}\r\n                              {...provided.dragHandleProps}\r\n                              {...provided.draggableProps}\r\n                            >\r\n                              <CardContent>\r\n                                <DragHandleIcon\r\n                                  className={classes.dragHandleIcon}\r\n                                />\r\n                                <div className={classes.rankingCardContent}>\r\n                                  {item.value}\r\n                                </div>\r\n                              </CardContent>\r\n                            </Card>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Typography>\r\n    );\r\n}\r\n\r\nexport default RankingQuestion;","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\LinearScaleQuestion.js",["535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { questionStyle } from \"../../viewStyles.js\";\r\n// Importing Material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Input,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  MenuItem,\r\n  Menu,\r\n  Select,\r\n  Divider,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Droppable, Draggable, DragDropContext } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\r\nimport SelectedSurveyContext from \"../../SelectedSurveyContext\";\r\nimport TextQuestion from \"./TextQuestion.js\";\r\nimport MultipleChoiceQuestion from \"./MultipleChoiceQuestion.js\";\r\nimport RankingQuestion from \"./RankingQuestion.js\";\r\nconst useStyles = questionStyle;\r\n\r\nfunction LinearScaleQuestion(props){\r\n\r\n\tconst classes = useStyles();\r\n\tconst [linearScaleSelectedValue, setLinearScaleSelectedValue] = useState('');\r\n\r\n\t/*---GESTIONE DELLA SELEZIONE NELLA LINEAR SCALE---*/\r\n\tconst handleLinearScaleChange = (e) => {\r\n\r\n\t\tsetLinearScaleSelectedValue(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n      <Typography component={\"span\"} color=\"textPrimary\" align=\"center\">\r\n        <Grid>\r\n          <Paper\r\n            variant=\"outlined\"\r\n            width={400}\r\n            component=\"div\"\r\n            className={classes.wrapper}\r\n          >\r\n            <Box align=\"left\" className={classes.titleContainer}>\r\n              {props.data.title}\r\n            </Box>\r\n\r\n            <Box\r\n              align=\"left\"\r\n              fontWeight=\"fontWeightBold\"\r\n              className={classes.elementContainer}\r\n            >\r\n              {props.data.description}\r\n            </Box>\r\n            <Box display=\"flex\" flexdirection=\"row\">\r\n              <Box className={classes.labelContainer}>\r\n                {props.data.minValueLabel}\r\n              </Box>\r\n\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  row\r\n                  aria-label=\"gender\"\r\n                  name=\"LinearScale\"\r\n                  value={linearScaleSelectedValue}\r\n                  onChange={handleLinearScaleChange}\r\n                >\r\n                  {/*Creazione del range della LinearScale dati minValue e maxValue*/}\r\n                  {//Number converte una stringa in un numero\r\n                    [...Array(Number(props.data.maxValue) + 1 - Number(props.data.minValue))].map((s, i) => (\r\n                      <FormControlLabel\r\n                      value={Number(props.data.minValue) + i}\r\n                      control={\r\n                        <Radio\r\n                          checked={\r\n                            linearScaleSelectedValue ==\r\n                            Number(props.data.minValue) + i\r\n                          }\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label={Number(props.data.minValue) + i}\r\n                      labelPlacement=\"top\"\r\n                      />\r\n                    ))\r\n                  }\r\n                </RadioGroup>\r\n              </FormControl>\r\n              <Box className={classes.labelContainer}>\r\n                {props.data.maxValueLabel}\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Typography>\r\n    );\r\n\r\n}\r\n\r\nexport default LinearScaleQuestion;","C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\Image.js",["563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertestsrist\\client\\src\\components\\view\\RandomNamesContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Page.js",["600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RandomNamesContext.js",[],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\Image.js",["638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\LinearScaleQuestion.js",["675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\RankingQuestion.js",["703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\MultipleChoiceQuestion.js",["728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"C:\\Users\\rikyv\\Desktop\\React\\materialusertests\\client\\src\\components\\view\\TextQuestion.js",["754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781"],{"ruleId":"782","replacedBy":"783"},{"ruleId":"784","replacedBy":"785"},{"ruleId":"786","severity":1,"message":"787","line":18,"column":7,"nodeType":"788","messageId":"789","endLine":18,"endColumn":14},{"ruleId":"790","severity":1,"message":"791","line":93,"column":5,"nodeType":"792","messageId":"793","endLine":117,"endColumn":6},{"ruleId":"790","severity":1,"message":"791","line":122,"column":7,"nodeType":"792","messageId":"793","endLine":127,"endColumn":8},{"ruleId":"786","severity":1,"message":"794","line":30,"column":5,"nodeType":"788","messageId":"789","endLine":30,"endColumn":15},{"ruleId":"786","severity":1,"message":"795","line":32,"column":5,"nodeType":"788","messageId":"789","endLine":32,"endColumn":16},{"ruleId":"786","severity":1,"message":"796","line":20,"column":8,"nodeType":"788","messageId":"789","endLine":20,"endColumn":21},{"ruleId":"786","severity":1,"message":"797","line":23,"column":10,"nodeType":"788","messageId":"789","endLine":23,"endColumn":25},{"ruleId":"786","severity":1,"message":"798","line":23,"column":27,"nodeType":"788","messageId":"789","endLine":23,"endColumn":36},{"ruleId":"786","severity":1,"message":"799","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":21},{"ruleId":"786","severity":1,"message":"800","line":36,"column":8,"nodeType":"788","messageId":"789","endLine":36,"endColumn":27},{"ruleId":"801","severity":1,"message":"802","line":87,"column":6,"nodeType":"803","endLine":87,"endColumn":8,"suggestions":"804"},{"ruleId":"786","severity":1,"message":"805","line":90,"column":9,"nodeType":"788","messageId":"789","endLine":90,"endColumn":18},{"ruleId":"786","severity":1,"message":"806","line":284,"column":13,"nodeType":"788","messageId":"789","endLine":284,"endColumn":35},{"ruleId":"807","severity":1,"message":"808","line":360,"column":53,"nodeType":"809","messageId":"810","endLine":360,"endColumn":55},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"833","line":47,"column":7,"nodeType":"788","messageId":"789","endLine":47,"endColumn":19},{"ruleId":"786","severity":1,"message":"834","line":48,"column":7,"nodeType":"788","messageId":"789","endLine":48,"endColumn":20},{"ruleId":"835","severity":1,"message":"836","line":62,"column":24,"nodeType":"837","messageId":"838","endLine":62,"endColumn":26},{"ruleId":"835","severity":1,"message":"836","line":70,"column":24,"nodeType":"837","messageId":"838","endLine":70,"endColumn":26},{"ruleId":"801","severity":1,"message":"839","line":135,"column":6,"nodeType":"803","endLine":135,"endColumn":8,"suggestions":"840"},{"ruleId":"786","severity":1,"message":"832","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":22},{"ruleId":"786","severity":1,"message":"831","line":33,"column":10,"nodeType":"788","messageId":"789","endLine":33,"endColumn":19},{"ruleId":"786","severity":1,"message":"841","line":42,"column":7,"nodeType":"788","messageId":"789","endLine":42,"endColumn":18},{"ruleId":"801","severity":1,"message":"842","line":95,"column":6,"nodeType":"803","endLine":95,"endColumn":8,"suggestions":"843"},{"ruleId":"786","severity":1,"message":"816","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":15},{"ruleId":"786","severity":1,"message":"831","line":21,"column":10,"nodeType":"788","messageId":"789","endLine":21,"endColumn":19},{"ruleId":"786","severity":1,"message":"832","line":23,"column":8,"nodeType":"788","messageId":"789","endLine":23,"endColumn":22},{"ruleId":"786","severity":1,"message":"844","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":21},{"ruleId":"786","severity":1,"message":"845","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":21},{"ruleId":"786","severity":1,"message":"846","line":31,"column":8,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"847","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":30},{"ruleId":"786","severity":1,"message":"848","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":20},{"ruleId":"786","severity":1,"message":"849","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":23},{"ruleId":"786","severity":1,"message":"850","line":35,"column":8,"nodeType":"788","messageId":"789","endLine":35,"endColumn":24},{"ruleId":"801","severity":1,"message":"851","line":60,"column":6,"nodeType":"803","endLine":60,"endColumn":8,"suggestions":"852"},{"ruleId":"786","severity":1,"message":"853","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"822","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":9},{"ruleId":"786","severity":1,"message":"831","line":16,"column":10,"nodeType":"788","messageId":"789","endLine":16,"endColumn":19},{"ruleId":"786","severity":1,"message":"832","line":18,"column":8,"nodeType":"788","messageId":"789","endLine":18,"endColumn":22},{"ruleId":"786","severity":1,"message":"845","line":24,"column":8,"nodeType":"788","messageId":"789","endLine":24,"endColumn":21},{"ruleId":"786","severity":1,"message":"796","line":25,"column":8,"nodeType":"788","messageId":"789","endLine":25,"endColumn":21},{"ruleId":"786","severity":1,"message":"820","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":9},{"ruleId":"801","severity":1,"message":"854","line":36,"column":6,"nodeType":"803","endLine":36,"endColumn":8,"suggestions":"855"},{"ruleId":"801","severity":1,"message":"856","line":15,"column":6,"nodeType":"803","endLine":15,"endColumn":8,"suggestions":"857"},{"ruleId":"858","severity":1,"message":"859","line":88,"column":11,"nodeType":"860","endLine":88,"endColumn":72},{"ruleId":"801","severity":1,"message":"861","line":22,"column":6,"nodeType":"803","endLine":22,"endColumn":8,"suggestions":"862"},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"782","replacedBy":"864"},{"ruleId":"784","replacedBy":"865"},{"ruleId":"782","replacedBy":"866"},{"ruleId":"784","replacedBy":"867"},{"ruleId":"786","severity":1,"message":"787","line":18,"column":7,"nodeType":"788","messageId":"789","endLine":18,"endColumn":14},{"ruleId":"790","severity":1,"message":"791","line":93,"column":5,"nodeType":"792","messageId":"793","endLine":117,"endColumn":6},{"ruleId":"790","severity":1,"message":"791","line":122,"column":7,"nodeType":"792","messageId":"793","endLine":127,"endColumn":8},{"ruleId":"786","severity":1,"message":"794","line":30,"column":5,"nodeType":"788","messageId":"789","endLine":30,"endColumn":15},{"ruleId":"786","severity":1,"message":"795","line":32,"column":5,"nodeType":"788","messageId":"789","endLine":32,"endColumn":16},{"ruleId":"786","severity":1,"message":"796","line":20,"column":8,"nodeType":"788","messageId":"789","endLine":20,"endColumn":21},{"ruleId":"786","severity":1,"message":"797","line":23,"column":10,"nodeType":"788","messageId":"789","endLine":23,"endColumn":25},{"ruleId":"786","severity":1,"message":"798","line":23,"column":27,"nodeType":"788","messageId":"789","endLine":23,"endColumn":36},{"ruleId":"786","severity":1,"message":"799","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":21},{"ruleId":"786","severity":1,"message":"800","line":36,"column":8,"nodeType":"788","messageId":"789","endLine":36,"endColumn":27},{"ruleId":"801","severity":1,"message":"802","line":87,"column":6,"nodeType":"803","endLine":87,"endColumn":8,"suggestions":"868"},{"ruleId":"786","severity":1,"message":"805","line":90,"column":9,"nodeType":"788","messageId":"789","endLine":90,"endColumn":18},{"ruleId":"786","severity":1,"message":"806","line":287,"column":13,"nodeType":"788","messageId":"789","endLine":287,"endColumn":35},{"ruleId":"807","severity":1,"message":"808","line":363,"column":53,"nodeType":"809","messageId":"810","endLine":363,"endColumn":55},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"833","line":47,"column":7,"nodeType":"788","messageId":"789","endLine":47,"endColumn":19},{"ruleId":"786","severity":1,"message":"834","line":48,"column":7,"nodeType":"788","messageId":"789","endLine":48,"endColumn":20},{"ruleId":"835","severity":1,"message":"836","line":62,"column":24,"nodeType":"837","messageId":"838","endLine":62,"endColumn":26},{"ruleId":"835","severity":1,"message":"836","line":70,"column":24,"nodeType":"837","messageId":"838","endLine":70,"endColumn":26},{"ruleId":"801","severity":1,"message":"839","line":135,"column":6,"nodeType":"803","endLine":135,"endColumn":8,"suggestions":"869"},{"ruleId":"786","severity":1,"message":"832","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":22},{"ruleId":"786","severity":1,"message":"831","line":33,"column":10,"nodeType":"788","messageId":"789","endLine":33,"endColumn":19},{"ruleId":"786","severity":1,"message":"841","line":42,"column":7,"nodeType":"788","messageId":"789","endLine":42,"endColumn":18},{"ruleId":"801","severity":1,"message":"842","line":95,"column":6,"nodeType":"803","endLine":95,"endColumn":8,"suggestions":"870"},{"ruleId":"786","severity":1,"message":"816","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":15},{"ruleId":"786","severity":1,"message":"831","line":21,"column":10,"nodeType":"788","messageId":"789","endLine":21,"endColumn":19},{"ruleId":"786","severity":1,"message":"832","line":23,"column":8,"nodeType":"788","messageId":"789","endLine":23,"endColumn":22},{"ruleId":"786","severity":1,"message":"844","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":21},{"ruleId":"786","severity":1,"message":"845","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":21},{"ruleId":"786","severity":1,"message":"846","line":31,"column":8,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"847","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":30},{"ruleId":"786","severity":1,"message":"848","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":20},{"ruleId":"786","severity":1,"message":"849","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":23},{"ruleId":"786","severity":1,"message":"850","line":35,"column":8,"nodeType":"788","messageId":"789","endLine":35,"endColumn":24},{"ruleId":"801","severity":1,"message":"851","line":60,"column":6,"nodeType":"803","endLine":60,"endColumn":8,"suggestions":"871"},{"ruleId":"786","severity":1,"message":"820","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":9},{"ruleId":"801","severity":1,"message":"854","line":36,"column":6,"nodeType":"803","endLine":36,"endColumn":8,"suggestions":"872"},{"ruleId":"786","severity":1,"message":"853","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"822","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":9},{"ruleId":"786","severity":1,"message":"831","line":16,"column":10,"nodeType":"788","messageId":"789","endLine":16,"endColumn":19},{"ruleId":"786","severity":1,"message":"832","line":18,"column":8,"nodeType":"788","messageId":"789","endLine":18,"endColumn":22},{"ruleId":"786","severity":1,"message":"845","line":24,"column":8,"nodeType":"788","messageId":"789","endLine":24,"endColumn":21},{"ruleId":"786","severity":1,"message":"796","line":25,"column":8,"nodeType":"788","messageId":"789","endLine":25,"endColumn":21},{"ruleId":"801","severity":1,"message":"861","line":22,"column":6,"nodeType":"803","endLine":22,"endColumn":8,"suggestions":"873"},{"ruleId":"801","severity":1,"message":"856","line":18,"column":6,"nodeType":"803","endLine":18,"endColumn":8,"suggestions":"874"},{"ruleId":"858","severity":1,"message":"859","line":91,"column":11,"nodeType":"860","endLine":95,"endColumn":13},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"877","line":5,"column":3,"nodeType":"788","messageId":"789","endLine":5,"endColumn":6},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"879","line":23,"column":8,"nodeType":"788","messageId":"789","endLine":23,"endColumn":18},{"ruleId":"786","severity":1,"message":"880","line":24,"column":8,"nodeType":"788","messageId":"789","endLine":24,"endColumn":12},{"ruleId":"786","severity":1,"message":"881","line":25,"column":8,"nodeType":"788","messageId":"789","endLine":25,"endColumn":13},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"883","line":45,"column":9,"nodeType":"788","messageId":"789","endLine":45,"endColumn":16},{"ruleId":"786","severity":1,"message":"884","line":48,"column":9,"nodeType":"788","messageId":"789","endLine":48,"endColumn":22},{"ruleId":"790","severity":1,"message":"791","line":72,"column":5,"nodeType":"792","messageId":"793","endLine":94,"endColumn":6},{"ruleId":"790","severity":1,"message":"791","line":98,"column":5,"nodeType":"792","messageId":"793","endLine":108,"endColumn":6},{"ruleId":"790","severity":1,"message":"791","line":109,"column":5,"nodeType":"792","messageId":"793","endLine":112,"endColumn":6},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"885","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":20},{"ruleId":"786","severity":1,"message":"886","line":35,"column":8,"nodeType":"788","messageId":"789","endLine":35,"endColumn":30},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"885","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":20},{"ruleId":"786","severity":1,"message":"886","line":35,"column":8,"nodeType":"788","messageId":"789","endLine":35,"endColumn":30},{"ruleId":"786","severity":1,"message":"887","line":36,"column":8,"nodeType":"788","messageId":"789","endLine":36,"endColumn":23},{"ruleId":"835","severity":1,"message":"836","line":91,"column":54,"nodeType":"837","messageId":"838","endLine":91,"endColumn":56},{"ruleId":"786","severity":1,"message":"888","line":1,"column":50,"nodeType":"788","messageId":"789","endLine":1,"endColumn":56},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"889","line":40,"column":7,"nodeType":"788","messageId":"789","endLine":40,"endColumn":11},{"ruleId":"786","severity":1,"message":"890","line":41,"column":7,"nodeType":"788","messageId":"789","endLine":41,"endColumn":18},{"ruleId":"786","severity":1,"message":"891","line":42,"column":7,"nodeType":"788","messageId":"789","endLine":42,"endColumn":15},{"ruleId":"786","severity":1,"message":"892","line":43,"column":10,"nodeType":"788","messageId":"789","endLine":43,"endColumn":17},{"ruleId":"786","severity":1,"message":"893","line":43,"column":19,"nodeType":"788","messageId":"789","endLine":43,"endColumn":29},{"ruleId":"786","severity":1,"message":"894","line":44,"column":10,"nodeType":"788","messageId":"789","endLine":44,"endColumn":21},{"ruleId":"786","severity":1,"message":"895","line":44,"column":23,"nodeType":"788","messageId":"789","endLine":44,"endColumn":37},{"ruleId":"786","severity":1,"message":"896","line":45,"column":10,"nodeType":"788","messageId":"789","endLine":45,"endColumn":25},{"ruleId":"786","severity":1,"message":"897","line":45,"column":27,"nodeType":"788","messageId":"789","endLine":45,"endColumn":45},{"ruleId":"801","severity":1,"message":"898","line":76,"column":6,"nodeType":"803","endLine":76,"endColumn":19,"suggestions":"899"},{"ruleId":"900","severity":1,"message":"901","line":94,"column":11,"nodeType":"860","endLine":94,"endColumn":59},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"877","line":5,"column":3,"nodeType":"788","messageId":"789","endLine":5,"endColumn":6},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"879","line":23,"column":8,"nodeType":"788","messageId":"789","endLine":23,"endColumn":18},{"ruleId":"786","severity":1,"message":"880","line":24,"column":8,"nodeType":"788","messageId":"789","endLine":24,"endColumn":12},{"ruleId":"786","severity":1,"message":"881","line":25,"column":8,"nodeType":"788","messageId":"789","endLine":25,"endColumn":13},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"883","line":45,"column":9,"nodeType":"788","messageId":"789","endLine":45,"endColumn":16},{"ruleId":"786","severity":1,"message":"884","line":48,"column":9,"nodeType":"788","messageId":"789","endLine":48,"endColumn":22},{"ruleId":"790","severity":1,"message":"791","line":72,"column":5,"nodeType":"792","messageId":"793","endLine":94,"endColumn":6},{"ruleId":"790","severity":1,"message":"791","line":98,"column":5,"nodeType":"792","messageId":"793","endLine":108,"endColumn":6},{"ruleId":"790","severity":1,"message":"791","line":109,"column":5,"nodeType":"792","messageId":"793","endLine":112,"endColumn":6},{"ruleId":"786","severity":1,"message":"888","line":1,"column":50,"nodeType":"788","messageId":"789","endLine":1,"endColumn":56},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"889","line":40,"column":7,"nodeType":"788","messageId":"789","endLine":40,"endColumn":11},{"ruleId":"786","severity":1,"message":"890","line":41,"column":7,"nodeType":"788","messageId":"789","endLine":41,"endColumn":18},{"ruleId":"786","severity":1,"message":"891","line":42,"column":7,"nodeType":"788","messageId":"789","endLine":42,"endColumn":15},{"ruleId":"786","severity":1,"message":"892","line":43,"column":10,"nodeType":"788","messageId":"789","endLine":43,"endColumn":17},{"ruleId":"786","severity":1,"message":"893","line":43,"column":19,"nodeType":"788","messageId":"789","endLine":43,"endColumn":29},{"ruleId":"786","severity":1,"message":"894","line":44,"column":10,"nodeType":"788","messageId":"789","endLine":44,"endColumn":21},{"ruleId":"786","severity":1,"message":"895","line":44,"column":23,"nodeType":"788","messageId":"789","endLine":44,"endColumn":37},{"ruleId":"786","severity":1,"message":"896","line":45,"column":10,"nodeType":"788","messageId":"789","endLine":45,"endColumn":25},{"ruleId":"786","severity":1,"message":"897","line":45,"column":27,"nodeType":"788","messageId":"789","endLine":45,"endColumn":45},{"ruleId":"801","severity":1,"message":"898","line":76,"column":6,"nodeType":"803","endLine":76,"endColumn":19,"suggestions":"902"},{"ruleId":"900","severity":1,"message":"901","line":94,"column":11,"nodeType":"860","endLine":94,"endColumn":59},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"885","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":20},{"ruleId":"786","severity":1,"message":"886","line":35,"column":8,"nodeType":"788","messageId":"789","endLine":35,"endColumn":30},{"ruleId":"786","severity":1,"message":"887","line":36,"column":8,"nodeType":"788","messageId":"789","endLine":36,"endColumn":23},{"ruleId":"835","severity":1,"message":"836","line":91,"column":54,"nodeType":"837","messageId":"838","endLine":91,"endColumn":56},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"885","line":34,"column":8,"nodeType":"788","messageId":"789","endLine":34,"endColumn":20},{"ruleId":"786","severity":1,"message":"886","line":35,"column":8,"nodeType":"788","messageId":"789","endLine":35,"endColumn":30},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"830","line":30,"column":8,"nodeType":"788","messageId":"789","endLine":30,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},{"ruleId":"786","severity":1,"message":"863","line":1,"column":17,"nodeType":"788","messageId":"789","endLine":1,"endColumn":25},{"ruleId":"786","severity":1,"message":"875","line":1,"column":27,"nodeType":"788","messageId":"789","endLine":1,"endColumn":36},{"ruleId":"786","severity":1,"message":"876","line":1,"column":38,"nodeType":"788","messageId":"789","endLine":1,"endColumn":48},{"ruleId":"786","severity":1,"message":"878","line":6,"column":3,"nodeType":"788","messageId":"789","endLine":6,"endColumn":9},{"ruleId":"786","severity":1,"message":"811","line":7,"column":3,"nodeType":"788","messageId":"789","endLine":7,"endColumn":7},{"ruleId":"786","severity":1,"message":"812","line":8,"column":3,"nodeType":"788","messageId":"789","endLine":8,"endColumn":14},{"ruleId":"786","severity":1,"message":"813","line":9,"column":3,"nodeType":"788","messageId":"789","endLine":9,"endColumn":14},{"ruleId":"786","severity":1,"message":"814","line":10,"column":3,"nodeType":"788","messageId":"789","endLine":10,"endColumn":13},{"ruleId":"786","severity":1,"message":"815","line":11,"column":3,"nodeType":"788","messageId":"789","endLine":11,"endColumn":8},{"ruleId":"786","severity":1,"message":"816","line":12,"column":3,"nodeType":"788","messageId":"789","endLine":12,"endColumn":15},{"ruleId":"786","severity":1,"message":"817","line":13,"column":3,"nodeType":"788","messageId":"789","endLine":13,"endColumn":15},{"ruleId":"786","severity":1,"message":"818","line":14,"column":3,"nodeType":"788","messageId":"789","endLine":14,"endColumn":11},{"ruleId":"786","severity":1,"message":"819","line":15,"column":3,"nodeType":"788","messageId":"789","endLine":15,"endColumn":7},{"ruleId":"786","severity":1,"message":"820","line":16,"column":3,"nodeType":"788","messageId":"789","endLine":16,"endColumn":9},{"ruleId":"786","severity":1,"message":"821","line":17,"column":3,"nodeType":"788","messageId":"789","endLine":17,"endColumn":10},{"ruleId":"786","severity":1,"message":"822","line":18,"column":3,"nodeType":"788","messageId":"789","endLine":18,"endColumn":19},{"ruleId":"786","severity":1,"message":"823","line":19,"column":3,"nodeType":"788","messageId":"789","endLine":19,"endColumn":9},{"ruleId":"786","severity":1,"message":"824","line":20,"column":3,"nodeType":"788","messageId":"789","endLine":20,"endColumn":10},{"ruleId":"786","severity":1,"message":"825","line":22,"column":8,"nodeType":"788","messageId":"789","endLine":22,"endColumn":17},{"ruleId":"786","severity":1,"message":"826","line":26,"column":8,"nodeType":"788","messageId":"789","endLine":26,"endColumn":13},{"ruleId":"786","severity":1,"message":"827","line":27,"column":8,"nodeType":"788","messageId":"789","endLine":27,"endColumn":18},{"ruleId":"786","severity":1,"message":"828","line":28,"column":8,"nodeType":"788","messageId":"789","endLine":28,"endColumn":19},{"ruleId":"786","severity":1,"message":"829","line":29,"column":8,"nodeType":"788","messageId":"789","endLine":29,"endColumn":17},{"ruleId":"786","severity":1,"message":"798","line":31,"column":10,"nodeType":"788","messageId":"789","endLine":31,"endColumn":19},{"ruleId":"786","severity":1,"message":"831","line":31,"column":21,"nodeType":"788","messageId":"789","endLine":31,"endColumn":30},{"ruleId":"786","severity":1,"message":"797","line":31,"column":32,"nodeType":"788","messageId":"789","endLine":31,"endColumn":47},{"ruleId":"786","severity":1,"message":"832","line":32,"column":8,"nodeType":"788","messageId":"789","endLine":32,"endColumn":22},{"ruleId":"786","severity":1,"message":"882","line":33,"column":8,"nodeType":"788","messageId":"789","endLine":33,"endColumn":29},"no-native-reassign",["903"],"no-negated-in-lhs",["904"],"no-unused-vars","'surveyz' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'secondPage' is assigned a value but never used.","'otherSurvey' is assigned a value but never used.","'ImageInputBtn' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'VideoCallIcon' is defined but never used.","'PlaceholdersContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMaxContentId', 'props.json', and 'updateRandomNumbers'. Either include them or remove the dependency array.","ArrayExpression",["905"],"'onDragEnd' is assigned a value but never used.","'onOpenEmbedVideoDialog' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'IconButton' is defined but never used.","'Input' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Select' is defined but never used.","'Divider' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Tooltip' is defined but never used.","'Container' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'TextField' is defined but never used.","'Draggable' is defined but never used.","'DragHandleIcon' is defined but never used.","'imageElement' is assigned a value but never used.","'randomElement' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'jsonData.pages'. Either include it or remove the dependency array.",["906"],"'initialData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mandatory', 'question.title', 'question.type', and 'updateQuestion'. Either include them or remove the dependency array.",["907"],"'QuestionTypes' is defined but never used.","'ShortTextIcon' is defined but never used.","'SubjectIcon' is defined but never used.","'RadioButtonCheckedIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'LinearScaleIcon' is defined but never used.","'ImportExportIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'randomNumbersNames'. Either include it or remove the dependency array.",["908"],"'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'maxRange', 'minRange', 'name', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["909"],"React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["910"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'maxValue', 'maxValueLabel', 'minValue', 'minValueLabel', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["911"],"'useState' is defined but never used.",["903"],["904"],["903"],["904"],["912"],["913"],["914"],["915"],["916"],["917"],["918"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'SelectedSurveyContext' is defined but never used.","'classes' is assigned a value but never used.","'contentSorter' is assigned a value but never used.","'TextQuestion' is defined but never used.","'MultipleChoiceQuestion' is defined but never used.","'RankingQuestion' is defined but never used.","'useRef' is defined but never used.","'rand' is defined but never used.","'randInRange' is defined but never used.","'printAux' is assigned a value but never used.","'toPrint' is assigned a value but never used.","'setToPrint' is assigned a value but never used.","'imagesNames' is assigned a value but never used.","'setImagesNames' is assigned a value but never used.","'generatedNumber' is assigned a value but never used.","'setGeneratedNumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.data.img', 'props.data.randomName', and 'props.data.randomStatus'. Either include them or remove the dependency array. If 'setImage' needs the current value of 'props.data.img', you can also switch to useReducer instead of useState and read 'props.data.img' in the reducer.",["919"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["920"],"no-global-assign","no-unsafe-negation",{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},{"desc":"933","fix":"934"},{"desc":"921","fix":"935"},{"desc":"923","fix":"936"},{"desc":"925","fix":"937"},{"desc":"927","fix":"938"},{"desc":"929","fix":"939"},{"desc":"933","fix":"940"},{"desc":"931","fix":"941"},{"desc":"942","fix":"943"},{"desc":"942","fix":"944"},"Update the dependencies array to be: [getMaxContentId, props.json, updateRandomNumbers]",{"range":"945","text":"946"},"Update the dependencies array to be: [jsonData.pages]",{"range":"947","text":"948"},"Update the dependencies array to be: [mandatory, question.title, question.type, updateQuestion]",{"range":"949","text":"950"},"Update the dependencies array to be: [randomNumbersNames]",{"range":"951","text":"952"},"Update the dependencies array to be: [maxRange, minRange, name, props]",{"range":"953","text":"954"},"Update the dependencies array to be: [content]",{"range":"955","text":"956"},"Update the dependencies array to be: [maxValue, maxValueLabel, minValue, minValueLabel, props]",{"range":"957","text":"958"},{"range":"959","text":"946"},{"range":"960","text":"948"},{"range":"961","text":"950"},{"range":"962","text":"952"},{"range":"963","text":"954"},{"range":"964","text":"958"},{"range":"965","text":"956"},"Update the dependencies array to be: [props.data.img, props.data.randomName, props.data.randomStatus, randomNames]",{"range":"966","text":"967"},{"range":"968","text":"967"},[2634,2636],"[getMaxContentId, props.json, updateRandomNumbers]",[5090,5092],"[jsonData.pages]",[2973,2975],"[mandatory, question.title, question.type, updateQuestion]",[1955,1957],"[randomNumbersNames]",[1016,1018],"[maxRange, minRange, name, props]",[503,505],"[content]",[601,603],"[maxValue, maxValueLabel, minValue, minValueLabel, props]",[2634,2636],[5090,5092],[2973,2975],[1955,1957],[1016,1018],[601,603],[632,634],[2507,2520],"[props.data.img, props.data.randomName, props.data.randomStatus, randomNames]",[2507,2520]]